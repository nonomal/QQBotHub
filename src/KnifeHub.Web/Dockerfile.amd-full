#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

# start Selenium
# 注意: 以下 为了使用 Selenium
# 复制 attachments/selenium/ 文件夹下的文件到 ./attachments/selenium/ 即 /app/attachments/selenium/
COPY attachments/selenium/ ./attachments/selenium/
RUN apt update
RUN apt-get install unzip
RUN apt-get install gdebi-core -y
WORKDIR /app/attachments/selenium
# 安装 Chrome
# 注意: Chrome 版本必须与 chromedriver 版本对应
# 安装 google-chrome*.deb 包依赖
# 注意: gdebi 没有 -y, 使用 -n 代替
RUN gdebi -n google-chrome*.deb
# 安装 chromedriver
RUN unzip chromedriver_linux64.zip
RUN mv chromedriver /app/chromedriver
WORKDIR /app
# 为所有用户添加可执行权限 (对chromedriver文件)
RUN chmod a+x chromedriver
# TODO: 以下添加 PATH 失败
RUN echo 'export PATH=$PATH:/app' >> ~/.bash_profile
RUN /bin/bash -c "source ~/.bash_profile"
# 使用 Dockerfile 方式 添加 PATH
ENV PATH=/app:$PATH
# 效验版本
RUN google-chrome --version
RUN chromedriver --version
# 下面两行安装中文字体
RUN apt install -y --force-yes --no-install-recommends fonts-wqy-microhei
RUN apt install -y --force-yes --no-install-recommends ttf-wqy-zenhei
# 以下安装 Selenium WebDriver 需要的依赖
RUN apt-get install libglib2.0 -y
RUN apt-get install libnss3-dev -y
RUN apt-get install libxcb1 -y
# end Selenium

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["src/KnifeHub.Web/KnifeHub.Web.csproj", "src/KnifeHub.Web/"]
COPY ["src/KnifeHub.Sdk/KnifeHub.Sdk.csproj", "src/KnifeHub.Sdk/"]
RUN dotnet restore "src/KnifeHub.Web/KnifeHub.Web.csproj"
COPY . .
WORKDIR "/src/src/KnifeHub.Web"
RUN dotnet build --framework net8.0 "KnifeHub.Web.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish --framework net8.0 "KnifeHub.Web.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
# start filebrowser
COPY --from=build /src/docker/.filebrowser.json /app-filebrowser/.filebrowser.json
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
# /usr/local/bin/filebrowser
RUN mkdir /app-filebrowser; \
    cd /app-filebrowser; \ 
    curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash
# end filebrowser
# start supervisord
COPY --from=build /src/docker/supervisord.conf .
RUN set -ex; \
    \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        supervisor \
    ; \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p \
    /var/log/supervisord \
    /var/run/supervisord \
;
RUN mv supervisord.conf /etc/supervisord.conf
RUN chmod 777 /var/run
RUN chmod 777 /var/log
RUN touch /var/run/supervisor.sock
RUN chmod 777 /var/run/supervisor.sock
# end supervisord
# start nginx
RUN apt-get update && apt-get install -y vim && apt-get install -y net-tools && apt-get install -y nginx
# /etc/nginx/nginx.conf
COPY --from=build /src/docker/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /src/docker/nginx-site.conf /etc/nginx/sites-enabled/default 
# TODO: ERROR: failed to solve: process "/bin/sh -c /usr/sbin/nginx -s reload" did not complete successfully: exit code: 1
# TODO: Error: Process completed with exit code 1.
# RUN /usr/sbin/nginx -s reload
# RUN nginx -c /etc/nginx/nginx.conf
RUN mkdir /app-nginx
# end nginx

RUN ulimit -c 0
# ENTRYPOINT ["dotnet", "KnifeHub.Web.dll"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
