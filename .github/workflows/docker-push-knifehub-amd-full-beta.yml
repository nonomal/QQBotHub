name: Docker Image CI/CD - Beta - knifehub-amd-full-beta

on:
  push:
    branches: [ main ]

jobs:
  # build and push
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get latest release
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "release, prerelease"
          view_top: 1  

      - name: Set outputs
        id: vars
        run: |
          echo ::set-output name=IMAGE_NAME::knifehub
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Registry - Docker Hub
        run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Image and Push - Docker Hub
        # push: last_release-beta
        run: |
          docker buildx build \
          --platform=linux/amd64 \
          --output "type=image,push=true" \
          --file src/KnifeHub.Web/Dockerfile.amd-full \
          --tag ${{ secrets.DOCKER_USERNAME }}/${{ steps.vars.outputs.IMAGE_NAME }}:${{ steps.last_release.outputs.tag_name }}-amd-full-beta \
          .
      - name: Login to Registry - ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      - name: Build Image and Push - ghcr.io
        # push: last_release-beta
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ steps.vars.outputs.IMAGE_NAME }}
          VERSION=${{ steps.last_release.outputs.tag_name }}-amd-full-beta
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker buildx build \
          --platform=linux/amd64 \
          --output "type=image,push=true" \
          --file src/KnifeHub.Web/Dockerfile.amd-full \
          --tag $IMAGE_ID:$VERSION \
          .