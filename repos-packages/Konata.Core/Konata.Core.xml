<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Konata.Core</name>
    </assembly>
    <members>
        <member name="T:Konata.Core.Attributes.BusinessLogicAttribute">
            <summary>
            Business logic Attribute
            </summary>
        </member>
        <member name="T:Konata.Core.Attributes.ComponentAttribute">
            <summary>
            Konata Component Attribute
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.KonataApiAttribute.Version">
            <summary>
            API version
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.KonataApiAttribute.Experimental">
            <summary>
            Is an experimental API
            </summary>
        </member>
        <member name="T:Konata.Core.Attributes.ServiceAttribute">
            <summary>
            SSO Service Attribute
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.ServiceAttribute.Command">
            <summary>
            Service command name
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.ServiceAttribute.PacketType">
            <summary>
            Service packet type
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.ServiceAttribute.AuthType">
            <summary>
            Service authorization type 
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.ServiceAttribute.SeqMode">
            <summary>
            Sequence mode
            </summary>
        </member>
        <member name="P:Konata.Core.Attributes.ServiceAttribute.NeedTgtToken">
            <summary>
            Need tgtToken
            </summary>
        </member>
        <member name="T:Konata.Core.Attributes.SequenceMode">
            <summary>
            Sequence mode
            </summary>
        </member>
        <member name="T:Konata.Core.Bot">
            <summary>
            Bot instance
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.Uin">
            <summary>
            Uin
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.AppInfo">
            <summary>
            App info
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.KeyStore">
            <summary>
            Keystore
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.DeviceInfo">
            <summary>
            Device info
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.GlobalConfig">
            <summary>
            Global config
            </summary>
        </member>
        <member name="P:Konata.Core.Bot.HighwayServer">
            <summary>
            Highway server
            </summary>
        </member>
        <member name="M:Konata.Core.Bot.#ctor(Konata.Core.Common.BotConfig,Konata.Core.Common.BotDevice,Konata.Core.Common.BotKeyStore)">
            <summary>
            Create a bot
            </summary>
            <param name="config"><b>[In]</b> Bot configuration</param>
            <param name="device"><b>[In]</b> Bot device definition</param>
            <param name="keystore"><b>[In]</b> Bot keystore</param>
        </member>
        <member name="E:Konata.Core.Bot.OnLog">
            <summary>
            Handle log event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnBotOnline">
            <summary>
            Handle bot online event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnBotOffline">
            <summary>
            Handle bot offline event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnCaptcha">
            <summary>
            Handle captcha event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupMessage">
            <summary>
            On group message event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupMute">
            <summary>
            On group mute event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupMessageRecall">
            <summary>
            On group recall message event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupPoke">
            <summary>
            On group poke event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupMemberDecrease">
            <summary>
            On group member decrease event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupMemberIncrease">
            <summary>
            On group member increase event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupPromoteAdmin">
            <summary>
            On group admin set/unset event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupInvite">
            <summary>
            On group invite event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnGroupRequestJoin">
            <summary>
            On group request join event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnFriendMessage">
            <summary>
            On friend message event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnFriendMessageRecall">
            <summary>
            On group recall message event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnFriendPoke">
            <summary>
            On friend poke event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnFriendTyping">
            <summary>
            On friend typing event
            </summary>
        </member>
        <member name="E:Konata.Core.Bot.OnFriendRequest">
            <summary>
            On friend request event
            </summary>
        </member>
        <member name="M:Konata.Core.Bot.InitializeHandlers">
            <summary>
            Handlers initialization
            </summary>
        </member>
        <member name="M:Konata.Core.Bot.PostEventToEntity(Konata.Core.Events.BaseEvent)">
            <summary>
            Post event to user end
            </summary>
            <param name="anyEvent"></param>
        </member>
        <member name="M:Konata.Core.Bot.HandlerRegistered``1">
            <summary>
            Retrieve the handler is registered
            </summary>
            <typeparam name="TEvent"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.TryGetMemberInfo(System.UInt32,System.UInt32,Konata.Core.Common.BotMember@)">
            <summary>
            Get member information
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="memberUin"><b>[In]</b> Member uin</param>
            <param name="memberInfo"><b>[Out]</b> Member information</param>
        </member>
        <member name="M:Konata.Core.Bot.GetMemberInfo(System.UInt32,System.UInt32)">
            <summary>
            Get member information
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="memberUin"><b>[In]</b> Member uin</param>
        </member>
        <member name="M:Konata.Core.Bot.TryGetGroupInfo(System.UInt32,Konata.Core.Common.BotGroup@)">
            <summary>
            Get group information
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="groupInfo"><b>[Out]</b> Group information</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetGroupInfo(System.UInt32)">
            <summary>
            Get group information
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.TryGetFriendInfo(System.UInt32,Konata.Core.Common.BotFriend@)">
            <summary>
            Get friend information
            </summary>
            <param name="friendUin"><b>[In]</b> Friend uin</param>
            <param name="friendInfo"><b>[Out]</b> Friend information</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetFriendInfo(System.UInt32)">
            <summary>
            Get friend information
            </summary>
            <param name="friendUin"><b>[In]</b> Friend uin</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.TouchGroupInfo(Konata.Core.Common.BotGroup)">
            <summary>
            Add or update group
            </summary>
            <param name="groupInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.TouchGroupInfo(System.UInt32,System.String)">
            <summary>
            Add or update group information
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="groupName"><b>[In]</b> Group name</param>
        </member>
        <member name="M:Konata.Core.Bot.TouchGroupMemberInfo(System.UInt32,Konata.Core.Common.BotMember)">
            <summary>
            Add or update group member
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="memberInfo">><b>[In]</b> Member info</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.TouchGroupMemberInfo(System.UInt32,System.UInt32,System.String)">
            <summary>
            Touch group member info
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="memberUin"><b>[In]</b> Member uin</param>
            <param name="memberCardName"><b>[In]</b> Member card name</param>
        </member>
        <member name="M:Konata.Core.Bot.TouchFriendInfo(Konata.Core.Common.BotFriend)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.IsLackMemberCacheForGroup(System.UInt32)">
            <summary>
            Check if lacks the member cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetGroupUin(System.UInt32)">
            <summary>
            Get group uin from a code
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetGroupCode(System.UInt32)">
            <summary>
            Get group code from an uin
            </summary>
            <param name="groupUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetGroupList">
            <summary>
            Get group list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetGroupMemberList(System.UInt32)">
            <summary>
            Get group member list
            </summary>
            <param name="groupUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Bot.GetFriendList">
            <summary>
            Get friend list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Common.BotConfig">
            <summary>
            Config
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotConfig.TryReconnect">
            <summary>
            Try reconnect while offline.
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotConfig.CustomHost">
            <summary>
            Custom server
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotConfig.HighwayChunkSize">
            <summary>
            Highway chunk size
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotConfig.DefaultTimeout">
            <summary>
            Default net timeout
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotConfig.EnableAudio">
            <summary>
            Is enable audio function
            </summary>
        </member>
        <member name="F:Konata.Core.Common.BotConfig.Protocol">
            <summary>
            Protocol type
            </summary>
        </member>
        <member name="M:Konata.Core.Common.BotConfig.Default">
            <summary>
            Get a default config
            </summary>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Common.BotDevice">
            <summary>
            Bot device definitions
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.Model">
            <summary>
            Device model information
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.Display">
            <summary>
            Display information
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.System">
            <summary>
            System information
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.Network">
            <summary>
            Network information
            </summary>
        </member>
        <member name="T:Konata.Core.Common.BotDevice.ModelInfo">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.Name">
            <summary>
            Device name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.Manufacturer">
            <summary>
            Device manufacturer
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.Imei">
            <summary>
            Device Imei
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.Imsi">
            <summary>
            Device Imsi
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.BaseBand">
            <summary>
            Device baseband
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotDevice.ModelInfo.CodeName">
            <summary>
            Device codename
            </summary>
        </member>
        <member name="T:Konata.Core.Common.BotDevice.SystemInfo">
            <summary>
            System info
            </summary>
        </member>
        <member name="M:Konata.Core.Common.BotDevice.Default">
            <summary>
            Get a random device
            </summary>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Common.BotFriend">
            <summary>
            Bot friend definitions
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.Uin">
            <summary>
            Friend uin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.Name">
            <summary>
            Friend name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.Remark">
            <summary>
            Friend remark
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.FaceId">
            <summary>
            Friend face id
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.Gender">
            <summary>
            Friend gender
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotFriend.AvatarUrl">
            <summary>
            Friend Avatar Url
            </summary>
        </member>
        <member name="T:Konata.Core.Common.BotGroup">
            <summary>
            Bot group definitions
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.Uin">
            <summary>
            Group uin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.Code">
            <summary>
            Group code
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.Name">
            <summary>
            Group name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.OwnerUin">
            <summary>
            Group owner uin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.AdminUins">
            <summary>
            Group admins
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.MemberCount">
            <summary>
            Group member count
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.MaxMemberCount">
            <summary>
            Group max member count
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.Muted">
            <summary>
            Group muted
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.MutedMe">
            <summary>
            Muted me
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.AvatarUrl">
            <summary>
            Group Avatar Url
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.LastUpdate">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotGroup.Members">
            <summary>
            Group members
            </summary>
        </member>
        <member name="T:Konata.Core.Common.BotKeyStore">
            <summary>
            Keystore
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotKeyStore.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotKeyStore.Session">
            <summary>
            Session keys
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotKeyStore.Ecdh">
            <summary>
            Ecdh
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotKeyStore.KeyStub">
            <summary>
            Fixed keys
            </summary>
        </member>
        <member name="M:Konata.Core.Common.BotKeyStore.#ctor">
            <summary>
            Create a key store
            </summary>
        </member>
        <member name="M:Konata.Core.Common.BotKeyStore.#ctor(System.String,System.String)">
            <summary>
            Create a key store
            </summary>
            <param name="uin"><b>[In]</b> Uin</param>
            <param name="password"><b>[In]</b> Password</param>
        </member>
        <member name="M:Konata.Core.Common.BotKeyStore.MakeSyncCookie">
            <summary>
            Make sync cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Common.BotKeyStore.MakeRandKey(System.Int32)">
            <summary>
            Make random key
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Common.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.Uin">
            <summary>
            Account uin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.Name">
            <summary>
            Account name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.Age">
            <summary>
            Account age
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.Face">
            <summary>
            Account face id
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.PasswordMd5">
            <summary>
            Account password md5
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.SyncCookie">
            <summary>
            Sync cookie
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Account.SyncCookieConsts">
            <summary>
            Sync cookie const
            </summary>
        </member>
        <member name="T:Konata.Core.Common.WtLogin">
            <summary>
            WtLogin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.GSecret">
            <summary>
            GSecret
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.DSecret">
            <summary>
            DSecret
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.TgtKey">
            <summary>
            TgtKey
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.TgtToken">
            <summary>
            TgtToken
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.D2Key">
            <summary>
            D2Key
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.D2Token">
            <summary>
            D2Token
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.GtKey">
            <summary>
            GtKey
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.StKey">
            <summary>
            StKey
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.Tlv106Key">
            <summary>
            Tlv106Key
            </summary>
        </member>
        <member name="P:Konata.Core.Common.WtLogin.WtSessionT547">
            <summary>
            T547 data for submiting slider captcha
            </summary>
        </member>
        <member name="P:Konata.Core.Common.KeyStub.RandKey">
            <summary>
            Rand key
            </summary>
        </member>
        <member name="T:Konata.Core.Common.BotMember">
            <summary>
            Bot member definitions
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Uin">
            <summary>
            Member uin
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Name">
            <summary>
            Member name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.NickName">
            <summary>
            Member nick name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.SpecialTitle">
            <summary>
            Member special title
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.SpecialTitleExpiredTime">
            <summary>
            Member special title expire time
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Age">
            <summary>
            Member age
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.FaceId">
            <summary>
            Member face Id
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Gender">
            <summary>
            Member gender
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Level">
            <summary>
            Member level
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.JoinTime">
            <summary>
            Member join time
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.LastSpeakTime">
            <summary>
            Member last speak time
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.Role">
            <summary>
            Member role
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.AvatarUrl">
            <summary>
            Member Avatar Url
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.IsAdmin">
            <summary>
            Member is admin (except owner)
            </summary>
        </member>
        <member name="P:Konata.Core.Common.BotMember.MuteTimestamp">
            <summary>
            Mute timestamp
            </summary>
        </member>
        <member name="T:Konata.Core.Common.RoleType">
            <summary>
            Member role
            </summary>
        </member>
        <member name="F:Konata.Core.Common.RoleType.Member">
            <summary>
             Normal member
            </summary>
        </member>
        <member name="F:Konata.Core.Common.RoleType.Admin">
            <summary>
            Administrator
            </summary>
        </member>
        <member name="F:Konata.Core.Common.RoleType.Owner">
            <summary>
            Owner
            </summary>
        </member>
        <member name="T:Konata.Core.Common.Scheduler">
            <summary>
            Task Scheduler
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Scheduler.Bot">
            <summary>
            Bot
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Scheduler.Instance">
            <summary>
            Scheduler entity
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Scheduler.Name">
            <summary>
            Scheduler name
            </summary>
        </member>
        <member name="P:Konata.Core.Common.Scheduler.Action">
            <summary>
            Scheduler action
            </summary>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Finalize">
            <summary>
            Cancel the task
            </summary>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Create(Konata.Core.Bot,System.String,System.Action{Konata.Core.Bot})">
            <summary>
            Create a task scheduler
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="name"><b>[In]</b> Task identity name</param>
            <param name="action"><b>[In]</b> Task callback action</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Interval(System.Int32,System.Int32)">
            <summary>
            Execute the task with a specific interval
            </summary>
            <param name="interval"><b>[In]</b> Interval in milliseconds</param>
            <param name="times"><b>[In]</b> Execute times</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Interval(System.Int32)">
            <summary>
            Execute the task with a specific interval infinity
            </summary>
            <param name="interval"><b>[In]</b> Interval in milliseconds</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.RunOnce(System.Int32)">
            <summary>
            Execute the task once
            </summary>
            <param name="delay"><b>[In]</b> Delay time in milliseconds</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.RunOnce(System.DateTime)">
            <summary>
            Execute the task once
            </summary>
            <param name="date"><b>[In]</b> Execute date</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Trigger">
            <summary>
            Trigger a task to run
            </summary>
        </member>
        <member name="M:Konata.Core.Common.Scheduler.Cancel">
            <summary>
            Cancel the task
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:Konata.Core.Common.ServerInfo.Host">
            <summary>
            Server host
            </summary>
        </member>
        <member name="P:Konata.Core.Common.ServerInfo.Port">
            <summary>
            Server port
            </summary>
        </member>
        <member name="M:Konata.Core.Components.BaseComponent.SendEvent``1(Konata.Core.Events.BaseEvent)">
            <summary>
            Send event (async with a return value)
            </summary>
            <param name="anyEvent"></param>
            <typeparam name="TComp"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.BaseComponent.PostEvent``1(Konata.Core.Events.BaseEvent)">
            <summary>
            Post event (async with none return value)
            </summary>
            <param name="anyEvent"></param>
            <typeparam name="TEvent"></typeparam>
        </member>
        <member name="M:Konata.Core.Components.BaseComponent.BroadcastEvent(Konata.Core.Events.BaseEvent)">
            <summary>
            Broadcast event
            </summary>
            <param name="anyEvent"></param>
        </member>
        <member name="M:Konata.Core.Components.BaseComponent.GetComponent``1">
            <summary>
            Get component
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.BusinessComponent.OnHandleEvent(Konata.Core.Entity.KonataTask)">
            <summary>
            Business logics
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.SyncGroupList">
            <summary>
            Sync group list
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.SyncGroupMemberList(System.UInt32)">
            <summary>
            Sync group member list cache
            </summary>
            <param name="groupUin"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.SyncFriendList">
            <summary>
            Sync friend list cache
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.SyncMemberInfo(Konata.Core.Events.Model.GroupMessageEvent)">
            <summary>
            Sync member info while the message coming
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.SyncFriendInfo(Konata.Core.Events.Model.FriendMessageEvent)">
            <summary>
            Sync friend info while the message coming
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.GetGroupList(System.Boolean)">
            <summary>
            Get group list
            </summary>
            <param name="forceUpdate"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.GetGroupMemberList(System.UInt32,System.Boolean)">
            <summary>
            Get group list
            </summary>
            <param name="groupUin"></param>
            <param name="forceUpdate"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.GetGroupMemberInfo(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Get group member info
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="forceUpdate"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.GetFriendList(System.Boolean)">
            <summary>
            Get friend list
            </summary>
            <param name="forceUpdate"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.CacheSyncLogic.GetCsrfToken">
            <summary>
            Get csrf token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessageFilterLogic.OnSyncServerTime">
            <summary>
            On sync server time
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessageFilterLogic.OnFilterCacheClear">
            <summary>
            Clear cache every 30 sec
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.SendFriendMessage(System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Send the message to a friend
            </summary>
            <param name="friendUin"></param>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.SendGroupMessage(System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Send the message to a group
            </summary>
            <param name="groupUin"></param>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.RecallMessage(Konata.Core.Message.MessageStruct)">
            <summary>
            Recall a message
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.UploadResources(System.UInt32,Konata.Core.Message.MessageChain,System.Boolean)">
            <summary>
            Upload resources
            </summary>
            <param name="uin"></param>
            <param name="message"></param>
            <param name="isGroup"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.FailedToUploadException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.SearchAt(System.Collections.Generic.List{Konata.Core.Message.Model.AtChain},System.UInt32,System.Boolean)">
            <summary>
            Search at
            </summary>
            <param name="chains"></param>
            <param name="uin"></param>
            <param name="isGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.UploadImage(Konata.Core.Message.Model.ImageChain,System.UInt32,System.Boolean)">
            <summary>
            Upload image manually
            </summary>
            <param name="image"></param>
            <param name="uin"></param>
            <param name="c2c"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.UploadImages(System.Collections.Generic.List{Konata.Core.Message.Model.ImageChain},System.UInt32,System.Boolean)">
            <summary>
            Upload images
            </summary>
            <param name="image"></param>
            <param name="uin"></param>
            <param name="isGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.UploadMultiMsg(Konata.Core.Message.Model.MultiMsgChain,System.Collections.Generic.List{Konata.Core.Message.Model.MultiMsgChain},System.UInt32,System.Boolean)">
            <summary>
            Upload MultiMsg
            </summary>
            <param name="uin"></param>
            <param name="main"></param>
            <param name="sides"></param>
            <param name="isGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.MessagingLogic.UploadRecords(System.Collections.Generic.List{Konata.Core.Message.Model.RecordChain},System.UInt32,System.Boolean)">
            <summary>
            Upload the records
            </summary>
            <param name="message"></param>
            <param name="uin"></param>
            <param name="isGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupPromoteAdmin(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Promote member to admin
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="toggleAdmin"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupMuteMember(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Mute the member in a given group
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="timeSeconds"><b>[In]</b> Mute time. </param>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupKickMember(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Kick the member in a given group
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="preventRequest"><b>[In]</b> Flag to prevent member request or no. </param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupSetSpecialTitle(System.UInt32,System.UInt32,System.String,System.UInt32)">
            <summary>
            Set special title
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="specialTitle"><b>[In]</b> Special title. </param>
            <param name="expiredTime"><b>[In]</b> Expired time. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupLeave(System.UInt32)">
            <summary>
            Leave group
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.GroupPoke(System.UInt32,System.UInt32)">
            <summary>
            Poke Group Member
            </summary>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.OperationLogic.FriendPoke(System.UInt32)">
            <summary>
            Poke Friend
            </summary>
            <param name="friendUin"><b>[In]</b> Friend uin being operated. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.PushEventLogic.OnPushConfig(Konata.Core.Events.Model.PushConfigEvent)">
            <summary>
            Push config
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.PushEventLogic.OnOnlineReqPush(Konata.Core.Events.Model.OnlineReqPushEvent)">
            <summary>
            Online push
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.PushEventLogic.OnPushTransMsg(Konata.Core.Events.Model.PushTransMsgEvent)">
            <summary>
            Trans msg push
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.Login">
            <summary>
            Bot login
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.Logout">
            <summary>
            Disconnect the socket and logout
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.SubmitSliderTicket(System.String)">
            <summary>
            Submit Slider ticket while login
            </summary>
            <param name="ticket"><b>[In]</b> Slider ticket</param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.SubmitSmsCode(System.String)">
            <summary>
            Submit Sms code while login
            </summary>
            <param name="code"><b>[In]</b> Sms code</param>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.WaitForUserOperation">
            <summary>
            Wait for user operation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.OnBotOnline">
            <summary>
            On bot online
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.OnCheckConnection">
            <summary>
            Check connection
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.OnPullMessage">
            <summary>
            Pull new message
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Logics.Model.WtExchangeLogic.OnReConnect">
            <summary>
            Reconnect
            </summary>
        </member>
        <member name="M:Konata.Core.Components.PacketComponent.LoadServices">
            <summary>
            Load sso service
            </summary>
        </member>
        <member name="M:Konata.Core.Components.PacketComponent.OnHandleEvent(Konata.Core.Entity.KonataTask)">
            <summary>
            On handle event
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.BaseService`1.Parse(Konata.Core.Packets.SSOFrame,Konata.Core.Common.AppInfo,Konata.Core.Common.BotKeyStore,`0@)">
            <summary>
            Parse packet
            </summary>
            <param name="input"></param>
            <param name="appInfo"></param>
            <param name="keystore"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.BaseService`1.Parse(Konata.Core.Packets.SSOFrame,Konata.Core.Common.AppInfo,Konata.Core.Common.BotKeyStore,`0@,System.Collections.Generic.List{Konata.Core.Events.ProtocolEvent})">
            <summary>
            Parse packet
            </summary>
            <param name="input"></param>
            <param name="appInfo"></param>
            <param name="keystore"></param>
            <param name="output"></param>
            <param name="extra"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.BaseService`1.Build(System.Int32,`0,Konata.Core.Common.AppInfo,Konata.Core.Common.BotKeyStore,Konata.Core.Common.BotDevice,Konata.Core.Packets.PacketBase@)">
            <summary>
            
            </summary>
            <param name="sequence"></param>
            <param name="input"></param>
            <param name="appInfo"></param>
            <param name="keystore"></param>
            <param name="device"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Components.Services.IService">
            <summary>
            SSO Service interface
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Services.IService.Parse(Konata.Core.Packets.SSOFrame,Konata.Core.Common.AppInfo,Konata.Core.Common.BotKeyStore,Konata.Core.Events.ProtocolEvent@,System.Collections.Generic.List{Konata.Core.Events.ProtocolEvent}@)">
            <summary>
            Parse packet to protocol event
            </summary>
            <param name="input"></param>
            <param name="appInfo"></param>
            <param name="keystore"></param>
            <param name="output"></param>
            <param name="extra"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.IService.Build(System.Int32,Konata.Core.Events.ProtocolEvent,Konata.Core.Common.AppInfo,Konata.Core.Common.BotKeyStore,Konata.Core.Common.BotDevice,Konata.Core.Packets.PacketBase@)">
            <summary>
            Build packet
            </summary>
            <param name="sequence"></param>
            <param name="input"></param>
            <param name="appInfo"></param>
            <param name="keystore"></param>
            <param name="device"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Components.Services.OfflineFilleHandleSvr.PbFtnCmdReqApplyDownload1200">
            <summary>
            OfflineFilleHandleSvr.pb_ftn_CMD_REQ_APPLY_DOWNLOAD-1200 (这个包确实是这个名字 可能是__的typo)
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Services.OnlinePush.ReqPush.HandlePushGroupEvent(System.Byte[],Konata.Core.Common.BotKeyStore)">
            <summary>
            Parse group push event
            </summary>
            <param name="pushPayload"></param>
            <param name="signInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.OnlinePush.ReqPush.HandlePushFriendEvent(System.UInt32,System.Byte[],Konata.Core.Common.BotKeyStore)">
            <summary>
            Parse friend push event
            </summary>
            <param name="fromSource"></param>
            <param name="pushPayload"></param>
            <param name="signInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Components.Services.Sequence.Session">
            <summary>
            Get Session
            </summary>
        </member>
        <member name="M:Konata.Core.Components.Services.Sequence.GetNewSequence">
            <summary>
            Get sequence with auto increment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.Sequence.GetSessionSequence(System.String)">
            <summary>
            Get sequence by service session
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.Sequence.DestroyServiceSequence(System.String)">
            <summary>
            Destroy sequence by service name
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.ExchangeEmp.OnRecvXchgSuccess(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Xchg success
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.ExchangeEmp.OnRecvTokenExpired(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Token expired
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.ExchangeEmp.OnRecvUnknown(Konata.Core.Packets.Oicq.OicqResponse)">
            <summary>
            Unknown code
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvCheckSliderCaptcha(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Check slider captcha 
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvCheckSmsCaptcha(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Check sms captcha
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvVerifyDeviceLock(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Verify device lock
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvWtloginSuccess(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Wtlogin success
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvIncorrectPassword(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Incorrect user or password
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvIncorrectSmsCode(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Incorrect sms code
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvHighRiskOfEnvironment(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            High risk of environment
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvOutdatedVersion(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Outdated version
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvLoginDenied(Konata.Core.Packets.Oicq.OicqResponse,Konata.Core.Common.BotKeyStore)">
            <summary>
            Any error denied login
            </summary>
            <param name="response"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.Services.WtLogin.Login.OnRecvUnknown(Konata.Core.Packets.Oicq.OicqResponse)">
            <summary>
            Unknown code
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.Connect(System.Boolean)">
            <summary>
            Connect to server
            </summary>
            <param name="useLowLatency"><b>[Opt] </b>Auto select the fastest server to connect.</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.Reconnect">
            <summary>
            Reconnect
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.Disconnect(System.String)">
            <summary>
            Disconnect from server
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.OnRecvPacket(System.ReadOnlySpan{System.Byte})">
            <summary>
            On Received a packet 
            </summary>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.OnDisconnect">
            <summary>
            On disconnect
            </summary>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.OnSocketError(System.Exception)">
            <summary>
            On socket error
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.OnHandleEvent(Konata.Core.Events.BaseEvent)">
            <summary>
            Event handler
            </summary>
            <param name="anyEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Components.SocketComponent.GetServerList">
            <summary>
            Get server list
            </summary>
            <returns></returns>
        </member>
        <member name="F:Konata.Core.Entity.BaseEntity._componentDict">
            <summary>
            Components on this entity
            </summary>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.LoadComponents``1">
            <summary>
            Load components
            </summary>
            <typeparam name="TAttribute"></typeparam>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.LoadComponents``1(System.Func{``0,System.Boolean})">
            <summary>
            Load components with a filter
            </summary>
            <param name="filter"></param>
            <typeparam name="TAttribute"></typeparam>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.UnloadComponents">
            <summary>
            Unload all components
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.GetComponent``1">
            <summary>
            Get component which attached on this entity
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.AddComponent(Konata.Core.Components.BaseComponent)">
            <summary>
            Add component to this entity
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.RemoveComponent(System.Type)">
            <summary>
            Delete component
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.StartAllComponents">
            <summary>
            Start components
            </summary>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.PostEventToEntity(Konata.Core.Events.BaseEvent)">
            <summary>
            Post an event to entity
            </summary>
            <param name="anyEvent"></param>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.SendEvent``1(Konata.Core.Events.BaseEvent,System.Int32)">
            <summary>
            Send an event to a component which
            attached under this entity with timeout
            </summary>
            <param name="anyEvent"></param>
            <param name="timeout"></param>
            <typeparam name="TComp"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.PostEvent``1(Konata.Core.Events.BaseEvent)">
            <summary>
            Post an event to a component which
            attached under this entity
            </summary>
            <param name="anyEvent"></param>
            <typeparam name="TComponent"></typeparam>
        </member>
        <member name="M:Konata.Core.Entity.BaseEntity.BroadcastEvent(Konata.Core.Events.BaseEvent)">
            <summary>
            Broad an event to all components
            </summary>
            <param name="anyEvent"></param>
        </member>
        <member name="M:Konata.Core.Events.LogEvent.Create(System.String,Konata.Core.Events.LogLevel,System.String)">
            <summary>
            Construct event
            </summary>
            <param name="tag"></param>
            <param name="level"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.BotOfflineEvent.Type">
            <summary>
            [Out] <br/>
            Offline type
            </summary>
        </member>
        <member name="T:Konata.Core.Events.Model.BotOfflineEvent.OfflineType">
            <summary>
            Offline type
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.BotOfflineEvent.Push(Konata.Core.Events.Model.BotOfflineEvent.OfflineType,System.String)">
            <summary>
            Construct event create
            </summary>
            <param name="type"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Events.Model.BotOnlineEvent.OnlineType">
            <summary>
            Online type
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.BotOnlineEvent.Push(Konata.Core.Events.Model.BotOnlineEvent.OnlineType)">
            <summary>
            Construct event create
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.CheckHeartbeatEvent.Create">
            <summary>
            Construct event request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.CheckHeartbeatEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.CorrectTimeEvent.ServerTime">
            <summary>
            <b>[In]</b> <br/>
            Server time <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.CorrectTimeEvent.Create">
            <summary>
            Construct event request
            </summary>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.ForceOfflineEvent.NotifyTitle">
            <summary>
            <b>[Out]</b> <br/>
            Highway host server
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ForceOfflineEvent.OfflineReason">
            <summary>
            <b>[Out]</b> <br/>
            Offline reason string
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageEvent.FriendUin">
            <summary>
            <b>[In]</b> <br/>
            Friend uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageEvent.Chain">
            <summary>
            <b>[In] [Out]</b> <br/>
            Message chain <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageEvent.Message">
            <summary>
            <b>[Out]</b> <br/>
            Message <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageEvent.Create(System.UInt32,System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Construct event request
            </summary>
            <param name="friendUin"></param>
            <param name="selfUin"></param>
            <param name="messageChain"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageEvent.Push">
            <summary>
            Construct event result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageEvent.SetMessageStruct(Konata.Core.Message.MessageStruct)">
            <summary>
            Set message struct
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageEvent.SetSelfUin(System.UInt32)">
            <summary>
            Set self uin
            </summary>
            <param name="selfUin"></param>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.FriendUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Friend uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.OperatorUin">
            <summary>
            <b>[Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.Sequence">
            <summary>
            <b>[In] [Out]</b> <br/>
            Sequence <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.Random">
            <summary>
            <b>[In] [Out]</b> <br/>
            Random <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.Uuid">
            <summary>
            <b>[In] [Out]</b> <br/>
            Uuid <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendMessageRecallEvent.Time">
            <summary>
            <b>[In] [Out]</b> <br/>
            Time <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageRecallEvent.Create(System.UInt32,System.UInt32,System.UInt32,System.Int64,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="friendUin"></param>
            <param name="sequence"></param>
            <param name="random"></param>
            <param name="uuid"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageRecallEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendMessageRecallEvent.Push(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int64,System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="friendUin"></param>
            <param name="operatorUin"></param>
            <param name="sequence"></param>
            <param name="rand"></param>
            <param name="uuid"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendPokeEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Friend uin <br/>
            </summary>s
        </member>
        <member name="P:Konata.Core.Events.Model.FriendPokeEvent.FriendUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Friend uin <br/>
            </summary>s
        </member>
        <member name="P:Konata.Core.Events.Model.FriendPokeEvent.ActionPrefix">
            <summary>
            <b>[Out]</b> <br/>
            Action prefix string <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendPokeEvent.ActionSuffix">
            <summary>
            <b>[Out]</b> <br/>
            Action suffix string <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendPokeEvent.Push(System.UInt32,System.String,System.String)">
            <summary>
            Construct event push
            </summary>
            <param name="friendUin"></param>
            <param name="actionPrefix"></param>
            <param name="actionSuffix"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendPokeEvent.Create(System.UInt32,System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="selfUin"></param>
            <param name="friendUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendPokeEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.ReqUin">
            <summary>
            [Out] <br/>
            Request uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.ReqNick">
            <summary>
            [Out] <br/>
            Request nickname
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.ReqTime">
            <summary>
            [Out] <br/>
            Request time
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.ReqComment">
            <summary>
            [Out] <br/>
            Request comment
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.Token">
            <summary>
            [Out] <br/>
            Token for accept or reject
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.IsApproved">
            <summary>
            [In] [Opt] <br/>
            Is approved
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendRequestEvent.PreventRequest">
            <summary>
            [In] [Opt] <br/>
            Prevent request from this account
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendRequestEvent.Push(System.UInt32,System.String,System.UInt32,System.String,System.Int64)">
            <summary>
            Construct event push
            </summary>
            <param name="reqUin"></param>
            <param name="reqNick"></param>
            <param name="reqTime"></param>
            <param name="reqComment"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendRequestEvent.Approve(System.UInt32,System.Int64)">
            <summary>
            Construct approve event
            </summary>
            <param name="reqUin"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.FriendRequestEvent.Decline(System.UInt32,System.Int64,System.Boolean)">
            <summary>
            Construct decline event
            </summary>
            <param name="reqUin"></param>
            <param name="token"></param>
            <param name="prevent"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.FriendTypingEvent.FriendUin">
            <summary>
            <b>[Out]</b> <br/>
            Friend uin <br/>
            </summary>s
        </member>
        <member name="M:Konata.Core.Events.Model.FriendTypingEvent.Push(System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="friendUin"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.GroupUin">
            <summary>
            [Out] <br/>
            Group uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.GroupName">
            <summary>
            [Out] <br/>
            Group name
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.InviterUin">
            <summary>
            [In] [Out] <br/>
            Inviter uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.InviterNick">
            <summary>
            [Out] <br/>
            Inviter nick name
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.InviterIsAdmin">
            <summary>
            [Out] <br/>
            Inviter is admin 
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.InviteTime">
            <summary>
            [Out] <br/>
            Invite time
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.Token">
            <summary>
            [Out] <br/>
            Request token for accept or reject
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.IsApproved">
            <summary>
            [In] [Opt] <br/>
            Is approved
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.DeclineReason">
            <summary>
            [In] [Opt] <br/>
            Decline reason
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupInviteEvent.PreventRequest">
            <summary>
            [In] [Opt] <br/>
            Prevent request from this account
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupInviteEvent.Push(System.UInt32,System.String,System.UInt32,System.String,System.Boolean,System.UInt32,System.Int64)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="groupName"></param>
            <param name="inviterUin"></param>
            <param name="inviterNick"></param>
            <param name="inviterIsAdmin"></param>
            <param name="inviteTime"></param>
            <param name="reqToken"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupInviteEvent.Approve(System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Construct approve event
            </summary>
            <param name="groupUin"></param>
            <param name="inviterUin"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupInviteEvent.Decline(System.UInt32,System.UInt32,System.Int64,System.String,System.Boolean)">
            <summary>
            Construct decline event
            </summary>
            <param name="groupUin"></param>
            <param name="inviterUin"></param>
            <param name="token"></param>
            <param name="reason"></param>
            <param name="prevent"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMemberEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin being operated.
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMemberEvent.MemberUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin being operated.
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMemberEvent.OperatorUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin did the operation.
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMemberEvent.ToggleType">
            <summary>
            <b>[Opt] [In]</b> <br/>
            Flag to prevent member request or no. <br/>
            The default value is <b>false</b>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupKickMemberEvent.Push(System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="operatorUin"></param>
            <param name="toggleType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupKickMemberEvent.Create(System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="operatorUin"></param>
            <param name="toggleType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupKickMemberEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMembersEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMembersEvent.MembersUin">
            <summary>
            <b>[In]</b> <br/>
            Members uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupKickMembersEvent.ToggleType">
            <summary>
            <b>[In]</b> <br/>
            Kick type <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupKickMembersEvent.Create(System.UInt32,System.UInt32[],System.Boolean)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="membersUin"></param>
            <param name="toggleType"></param>
            <returns></returns>s
        </member>
        <member name="M:Konata.Core.Events.Model.GroupKickMembersEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupLeaveEvent.Dismiss">
            <summary>
            Dismiss the group
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupLeaveEvent.GroupUin">
            <summary>
            Group uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupLeaveEvent.SelfUin">
            <summary>
            Self uin
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupLeaveEvent.Create(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Construct request event
            </summary>
            <param name="groupUin"></param>
            <param name="selfUin"></param>
            <param name="dismiss"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupLeaveEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMemberIncreaseEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin being operated.
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMemberIncreaseEvent.MemberUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin being operated.
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMemberIncreaseEvent.MemberNick">
            <summary>
            <b>[In]</b> <br/>
            Member nick did the operation.
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMemberIncreaseEvent.Push(System.UInt32,System.UInt32,System.String)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="memberNick"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.GroupUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Group uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.GroupName">
            <summary>
            <b>[Out]</b> <br/>
            Group name
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.MemberUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Member uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.MemberCard">
            <summary>
            <b>[Out]</b> <br/>
            Member card name <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.Chain">
            <summary>
            <b>[In] [Out]</b> <br/>
            Message chain <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.Message">
            <summary>
            <b>[Out]</b> <br/>
            Message <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageEvent.SliceInfo">
            <summary>
            <b>[Opt] [Out]</b> <br/>
            Slice control <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageEvent.Create(System.UInt32,System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="selfUin"></param>
            <param name="messageChain"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageEvent.Push">
            <summary>
            Construct event push
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageEvent.SetMessageStruct(Konata.Core.Message.MessageStruct)">
            <summary>
            Set message struct
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageEvent.SetSliceInfo(Konata.Core.Message.MessageSlice)">
            <summary>
            Set slice info
            </summary>
            <param name="messageSlice"></param>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageReadEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageReadEvent.RequestId">
            <summary>
            <b>[In]</b> <br/>
            Request id <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageReadEvent.Create(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="requestId"></param>
            <param name="sessionSeq"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageReadEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.GroupUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.OperatorUin">
            <summary>
            <b>[Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.AffectedUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.Sequence">
            <summary>
            <b>[In] [Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.Random">
            <summary>
            <b>[In] [Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMessageRecallEvent.Time">
            <summary>
            <b>[In] [Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.#ctor(System.UInt32,Konata.Core.Message.MessageStruct)">
            <summary>
            Recalling a message
            </summary>
            <param name="groupUin"></param>
            <param name="messageStruct"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Recalling a message
            </summary>
            <param name="groupUin"></param>
            <param name="sequence"></param>
            /// <param name="random"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.#ctor(System.Int32)">
            <summary>
            Recall result
            </summary>
            <param name="resultCode"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Push recall
            </summary>
            <param name="groupUin"></param>
            <param name="operatorUin"></param>
            <param name="affectedUin"></param>
            <param name="sequence"></param>
            <param name="rand"></param>
            <param name="time"></param>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.Create(System.UInt32,Konata.Core.Message.MessageStruct)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="messageStruct"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.Create(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="sequence"></param>
            /// <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMessageRecallEvent.Push(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="operatorUin"></param>
            <param name="affectedUin"></param>
            <param name="sequence"></param>
            <param name="rand"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupModifyMemberCardEvent.GroupUin">
            <summary>
            <b>[In]</b> s<br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupModifyMemberCardEvent.MemberUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupModifyMemberCardEvent.MemberCard">
            <summary>
            <b>[In]</b> <br/>
            Member group card <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupModifyMemberCardEvent.Create(System.UInt32,System.UInt32,System.String)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="memberCard"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupModifyMemberCardEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMuteMemberEvent.GroupUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMuteMemberEvent.MemberUin">
            <summary>
            <b>[Opt] [In] [Out]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMuteMemberEvent.OperatorUin">
            <summary>
            <b>[Opt] [Out]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupMuteMemberEvent.TimeSeconds">
            <summary>
            <b>[In] [Out]</b> <br/>
            Mute time seconds <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMuteMemberEvent.Create(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="timeSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMuteMemberEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupMuteMemberEvent.Push(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="operatorUin"></param>
            <param name="timeSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupNewMemberEvent.Push(System.Int32)">
            <summary>
            Construct event push
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPokeEvent.GroupUin">
            <summary>
            <b>[Out]</b> <br/>
            Group uin <br/>
            </summary>s
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPokeEvent.MemberUin">
            <summary>
            <b>[Out]</b> <br/>
            Member uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPokeEvent.OperatorUin">
            <summary>
            <b>[Out]</b> <br/>
            Operator uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPokeEvent.ActionPrefix">
            <summary>
            <b>[Out]</b> <br/>
            Action prefix string <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPokeEvent.ActionSuffix">
            <summary>
            <b>[Out]</b> <br/>
            Action suffix string <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPokeEvent.Push(System.UInt32,System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="operatorUin"></param>
            <param name="actionPrefix"></param>
            <param name="actionSuffix"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPokeEvent.Create(System.UInt32,System.UInt32)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPokeEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPromoteAdminEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin being operated <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPromoteAdminEvent.MemberUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin being operated <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPromoteAdminEvent.ToggleType">
            <summary>
            <b>[In]</b> <br/>
            Flag to toggle set or unset <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPromoteAdminEvent.Push(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="toggleType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPromoteAdminEvent.Create(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Construct event requests
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="toggleType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPromoteAdminEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPttUpEvent.GroupUin">
            <summary>s
            <b>[In]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPttUpEvent.SelfUin">
            <summary>s
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPttUpEvent.UploadRecord">
            <summary>s
            <b>[In]</b> <br/>
            Record to upload <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupPttUpEvent.UploadInfo">
            <summary>
            <b>[In] [Out]</b> <br/>
            Record upload info <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupPttUpEvent.Create(System.UInt32,System.UInt32,Konata.Core.Message.Model.RecordChain)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="selfUin"></param>
            <param name="uploadRecord"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.GroupUin">
            <summary>
            [Out] <br/>
            Group uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.GroupName">
            <summary>
            [Out] <br/>
            Group name
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.InviterUin">
            <summary>
            [Out] <br/>
            Inviter uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.ReqUin">
            <summary>
            [Out] <br/>
            Request uin
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.ReqNick">
            <summary>
            [Out] <br/>
            Request nick name
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.ReqTime">
            <summary>
            [Out] <br/>
            Request time
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.ReqComment">
            <summary>
            [Out] <br/>
            Request message
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.Token">
            <summary>
            [Out] <br/>
            Request token for accept or reject
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.IsApproved">
            <summary>
            [In] [Opt] <br/>
            Is approved
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.DeclineReason">
            <summary>
            [In] [Opt] <br/>
            Decline reason
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupRequestJoinEvent.PreventRequest">
            <summary>
            [In] [Opt] <br/>
            Prevent request from this account
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupRequestJoinEvent.Push(System.UInt32,System.String,System.UInt32,System.UInt32,System.String,System.String,System.UInt32,System.Int64)">
            <summary>
            Construct event push
            </summary>
            <param name="groupUin"></param>
            <param name="groupName"></param>
            <param name="inviterUin"></param>
            <param name="reqUin"></param>
            <param name="reqNick"></param>
            <param name="reqComment"></param>
            <param name="reqTime"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupRequestJoinEvent.Approve(System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Construct approve event
            </summary>
            <param name="groupUin"></param>
            <param name="reqUin"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupRequestJoinEvent.Decline(System.UInt32,System.UInt32,System.Int64,System.String,System.Boolean)">
            <summary>
            Construct decline event
            </summary>
            <param name="groupUin"></param>
            <param name="reqUin"></param>
            <param name="token"></param>
            <param name="reason"></param>
            <param name="prevent"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupSpecialTitleEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupSpecialTitleEvent.MemberUin">
            <summary>
            <b>[In]</b> <br/>
            Member uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.GroupSpecialTitleEvent.ExpiredTime">
            <summary>
            <b>[In]</b> <br/>
            Title expired time <br/>
            </summary>s
        </member>
        <member name="P:Konata.Core.Events.Model.GroupSpecialTitleEvent.SpecialTitle">
            <summary>
            <b>[In]</b> <br/>
            Special title <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupSpecialTitleEvent.Create(System.UInt32,System.UInt32,System.String,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="memberUin"></param>
            <param name="specialTitle"></param>
            <param name="expiredTime"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GroupSpecialTitleEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GuildSyncFirstView.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.GuildSyncFirstView.Result(System.Int64)">
            <summary>
            
            </summary>
            <param name="guildId"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.ImageUrl">
            <summary>
            <b>[In]</b> <br/>
            Image url (uploaded via highway)
            Example: https://qqpicocr-75402.gzc.vod.tencent-cloud.com/xxxxx
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.ImageMd5">
            <summary>
            <b>[In]</b> <br/>
            Image MD5
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.ImageWidth">
            <summary>
            <b>[In]</b> <br/>
            Image width
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.ImageHeight">
            <summary>
            <b>[In]</b> <br/>
            Image height
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.ImageLength">
            <summary>
            <b>[In]</b> <br/>
            Image length
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrEvent.OcrResult">
            <summary>
            <b>[Out]</b> <br/>
            OCR result
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrResult.Text">
            <summary>
            OCR result text
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrResult.Confidence">
            <summary>
            Result confidence in percentage
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ImageOcrResult.Polygon">
            <summary>
            Bounding polygon
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.MultiMsgApplyUpEvent.DestUin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.MultiMsgApplyUpEvent.Md5Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.MultiMsgApplyUpEvent.PackedLength">
            <summary>
            
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.MultiMsgApplyUpEvent.Create(System.UInt32,System.Byte[])">
            <summary>
            Construct event
            </summary>
            <param name="destUin"></param>
            <param name="packed"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.MultiMsgApplyUpEvent.Result(System.Int32,Konata.Core.Events.Model.MultiMsgUpInfo)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="uploadInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.OfflineFileDownloadEvent.SelfUin">
            <summary>
            The bot url
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OfflineFileDownloadEvent.FileUuid">
            <summary>
            The UUID defined in the fileChain or preview packet
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OfflineFileDownloadEvent.FileUrl">
            <summary>
            The download url
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.RequestId">
            <summary>
            <b>[Out]</b> <br/>
            Request Id <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.FromSource">
            <summary>
            <b>[Out]</b> <br/>
            From source <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.UnknownV1">
            <summary>
            <b>[Out]</b> <br/>
            Unknown variable 1 <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.SvrIp">
            <summary>
            <b>[Out]</b> <br/>
            Svr Ip <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.UnknownV8">
            <summary>
            <b>[Out]</b> <br/>
            Unknown variable 8 <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineReqPushEvent.UnknownV32">
            <summary>
            <b>[Out]</b> <br/>
            Unknown variable 32 <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineReqPushEvent.Push(System.Int32,System.UInt32,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Construct event request
            </summary>
            <param name="requestId"></param>
            <param name="fromSource"></param>
            <param name="v1"></param>
            <param name="svrip"></param>
            <param name="v8"></param>
            <param name="v32"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.RequestId">
            <summary>
            <b>[In]</b> <br/>
            Request Id <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.FromSource">
            <summary>
            <b>[In]</b> <br/>
            From source <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.UnknownV1">
            <summary>
            <b>[In]</b> <br/>
            Unknown variable 1 <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.SvrIp">
            <summary>
            <b>[In]</b> <br/>
            Svr Ip <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.UnknownV8">
            <summary>
            <b>[In]</b> <br/>
            Unknown variable 8 <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineRespPushEvent.UnknownV32">
            <summary>
            <b>[In]</b> <br/>
            Unknown variable 32 <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineRespPushEvent.Create(System.UInt32,Konata.Core.Events.Model.OnlineReqPushEvent)">
            <summary>
            Confirm the push event
            </summary>
            <param name="selfUin"></param>
            <param name="original"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineRespPushEvent.Create(System.UInt32,Konata.Core.Events.Model.PushTransMsgEvent)">
            <summary>
            Confirm the push event
            </summary>
            <param name="selfUin"></param>
            <param name="original"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineStatusEvent.EventType">
            <summary>
            <b>[In]</b>          <br/>
              Online main type   <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineStatusEvent.EventSubType">
            <summary>
            <b>[Opt] [In]</b>   <br/>
            Online sub type   <br/>
             - Only valid in <b>OnlineType.Online</b>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineStatusEvent.BatteryPercent">
            <summary>
            <b>[Opt] [In]</b>   <br/>
            Battery percent.  <br/>
              - Only valid in OnlineType.Online with SubType.BatteryPercent
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.OnlineStatusEvent.IsKickPC">
            <summary>
            <b>[Opt] [In]</b> <br/>
            Kick PC while login <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineStatusEvent.Create(Konata.Core.Events.Model.OnlineStatusEvent.Type,Konata.Core.Events.Model.OnlineStatusEvent.SubType)">
            <summary>
            Construct event request
            </summary>
            <param name="eventType"></param>
            <param name="subType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineStatusEvent.Create(Konata.Core.Events.Model.OnlineStatusEvent.Type)">
            <summary>
            Construct event request
            </summary>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineStatusEvent.Result(Konata.Core.Events.Model.OnlineStatusEvent.Type)">
            <summary>
            Construct event result
            </summary>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.OnlineStatusEvent.Push(Konata.Core.Events.Model.OnlineStatusEvent.Type,System.String)">
            <summary>
            Construct event push
            </summary>
            <param name="eventType"></param>
            <param name="reasonStr"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PbGetMessageEvent.SyncCookie">
            <summary>
            <b>[In]</b> <br/>
            Sync cookie <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PbGetMessageEvent.Create(System.Byte[])">
            <summary>
            Construct event request
            </summary>
            <param name="syncCookie"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PicUpEvent.DestUin">
            <summary>s
            <b>[In]</b> <br/>
            Destination uin <br/>
            [UpMode.GroupUp] Group uin <br/>
            [UpMode.OffUp] Friend uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PicUpEvent.SelfUin">
            <summary>s
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PicUpEvent.UploadImages">
            <summary>s
            <b>[In]</b> <br/>
            Image to upload <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PicUpEvent.UploadInfo">
            <summary>
            <b>[In] [Out]</b> <br/>
            Image upload info <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PicUpEvent.Mode">
            <summary>
             <b>[In]</b> <br/>
            Image upload mode
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PicUpEvent.GroupUp(System.UInt32,System.UInt32,System.Collections.Generic.List{Konata.Core.Message.Model.ImageChain})">
            <summary>
            Construct event request
            </summary>
            <param name="groupUin"></param>
            <param name="selfUin"></param>
            <param name="uploadImages"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.PicUpEvent.OffUp(System.UInt32,System.UInt32,System.Collections.Generic.List{Konata.Core.Message.Model.ImageChain})">
            <summary>
            Construct event request
            </summary>
            <param name="friendUin"></param>
            <param name="selfUin"></param>
            <param name="uploadImages"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.PicUpEvent.Result(System.Int32,System.Collections.Generic.List{Konata.Core.Events.Model.PicUpInfo})">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="uploadInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.StartIndex">
            <summary>
            <b>[In]</b> <br/>
            Start index <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.LimitNum">
            <summary>
            <b>[In]</b> <br/>
            Limit length <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.ErrorCode">
            <summary>
            <b>[Out]</b> <br/>
            Error code <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.TotalFriendCount">
            <summary>
            <b>[Out]</b> <br/>
            Total friend count <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullFriendListEvent.FriendInfo">
            <summary>
            <b>[Out]</b> <br/>
            Friend info list s<br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PullFriendListEvent.Create(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="selfUin"></param>
            <param name="startIndex"></param>
            <param name="limitNum"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.PullFriendListEvent.Result(System.Int32,System.Int16,System.Collections.Generic.List{Konata.Core.Common.BotFriend},System.UInt32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="errorCode"></param>
            <param name="friendInfo"></param>
            <param name="totalFriendCount"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupListEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupListEvent.GroupInfo">
            <summary>
            <b>[Out]</b> <br/>
            Group info list <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PullGroupListEvent.Create(System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="selfUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.PullGroupListEvent.Result(System.Int32,System.Collections.Generic.List{Konata.Core.Common.BotGroup})">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="groupInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.SelfUin">
            <summary>
            <b>[In]</b> <br/>
            Self uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.GroupCode">
            <summary>
            <b>[In]</b> <br/>
            Group code <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.GroupUin">
            <summary>
            <b>[In]</b> <br/>
            Group uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.NextUin">
            <summary>
            <b>[In] [Out]</b> <br/>
            Next uin <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.OfficeMode">
            <summary>
            <b>[Out]</b> <br/>
            Office mode <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.NextGetTime">
            <summary>
            <b>[Out]</b> <br/>
            Time for next get op <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.ErrorCode">
            <summary>
            <b>[Out]</b> <br/>
            Error code <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PullGroupMemberListEvent.MemberInfo">
            <summary>
            <b>[Out]</b> <br/>
            Partial member list <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PullGroupMemberListEvent.Create(System.UInt32,System.UInt32,System.UInt64,System.UInt32)">
            <summary>
            Construct event request
            </summary>
            <param name="selfUin"></param>
            <param name="groupUin"></param>
            <param name="groupCode"></param>
            <param name="nextUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.PullGroupMemberListEvent.Result(System.Int32,System.Int16,System.UInt32,System.UInt64,System.Collections.Generic.List{Konata.Core.Common.BotMember},System.UInt32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="errorCode"></param>
            <param name="groupUin"></param>
            <param name="groupCode"></param>
            <param name="memberInfo"></param>
            <param name="nextUin"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PushConfigEvent.HighwayHost">
            <summary>
            <b>[Out]</b> <br/>
            Highway host server
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PushConfigEvent.HighwayTicket">
            <summary>
            <b>[Out]</b> <br/>
            Highway token
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PushConfigEvent.Push(System.String,System.UInt16,System.Byte[])">
            <summary>
            Construct event push
            </summary>
            <param name="highwayHost"></param>
            <param name="highwayPort"></param>
            <param name="highwayTicket"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PushNotifyEvent.Type">
            <summary>
            <b>[Out]</b> <br/>
            Notify type
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PushNotifyEvent.Push(Konata.Core.Events.Model.NotifyType)">
            <summary>
            Construct event push
            </summary>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.PushTransMsgEvent.RequestId">
            <summary>
            <b>[Out]</b> <br/>
            Request Id <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.PushTransMsgEvent.SvrIp">
            <summary>
            <b>[Out]</b> <br/>
            Svr Ip <br/>
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.PushTransMsgEvent.Push(System.Int32,System.Int32)">
            <summary>
            Construct event request
            </summary>
            <param name="requestId"></param>
            <param name="svrip"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.ReqSystemMsgFriendEvent.RequestNum">
            <summary>
            [In]  <br/>
            Number of requested
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.ReqSystemMsgFriendEvent.Create(System.Int32)">
            <summary>
            Construct event request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.ReqSystemMsgFriendEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.ReqSystemMsgGroupEvent.RequestNum">
            <summary>
            [In]  <br/>
            Number of requested
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.ReqSystemMsgGroupEvent.RequestMsgType">
            <summary>
            [In]  <br/>
            Requested message type
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.ReqSystemMsgGroupEvent.Create(System.Int32,Konata.Core.Events.Model.ReqSystemMsgGroupEvent.ReqMsgType)">
            <summary>
            Construct event request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.ReqSystemMsgGroupEvent.Result(System.Int32)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Events.Model.SimpleGetEvent.UnknownTime">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.SimpleGetEvent.UnknownTimeB">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Konata.Core.Events.Model.SimpleGetEvent.Ip">
            <summary>
            Ip
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.SimpleGetEvent.Create">
            <summary>
            Construct event request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.SimpleGetEvent.Result(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Construct event result
            </summary>
            <param name="resultCode"></param>
            <param name="time"></param>
            <param name="timeb"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.Unknown">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed with unknown issue
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.NotImplemented">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed about not implemented functions
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.OK">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin OK
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.Tgtgt">
            <summary>
            <b>[In]</b> <br/>
            Wtlogin start
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.Xchg">
            <summary>
            <b>[In]</b> <br/>
            Wtlogin xchg
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.CheckSms">
            <summary>
            <b>[In] [Out]</b> <br/>
            Wtlogin do/submit SMS captcha
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.CheckSlider">
            <summary>
            <b>[In] [Out]</b> <br/>
            Wtlogin do/submit slider captcha
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.VerifyDeviceLock">
            <summary>
            <b>[In] [Out]</b> <br/>
            Wtlogin do/submit devlock
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.RefreshSms">
            <summary>
            <b>[In]</b> <br/>
            Wtlogin request refresh sms
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.RefreshSmsFailed">
            <summary>
            <b>[Out]</b> <br/>
            Refresh sms failed
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.LoginDenied">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin denied from server
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.InvalidUinOrPassword">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed with pwd issue
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.HighRiskOfEnvironment">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed with login environment
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.OutdatedVersion">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed with outdated version
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.InvalidSmsCode">
            <summary>
            <b>[Out]</b> <br/>
            Wtlogin failed with invalid SMS code
            </summary>
        </member>
        <member name="F:Konata.Core.Events.Model.WtLoginEvent.Type.TokenExpired">
            <summary>
            <b>[Out]</b> <br/>
            token expired [xchg only]
            </summary>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateTgtgt">
            <summary>
            Construct tgtgt request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateXchg">
            <summary>
            Construct xchg request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateRefreshSms">
            <summary>
            Construct refresh sms request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateSubmitTicket(System.String)">
            <summary>
            Construct submit ticket request
            </summary>
            <param name="ticket"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateSubmitSmsCode(System.String)">
            <summary>
            Construct submit sms code request
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.CreateCheckDevLock">
            <summary>
            Construct check device lock request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.ResultOk(System.Int32)">
            <summary>
            Construct wtlogin ok result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.ResultVerifyDeviceLock(System.Int32)">
            <summary>
            Construct wtlogin device lock result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.ResultCheckSlider(System.Int32,System.String)">
            <summary>
            Construct check slider result
            </summary>
            <param name="resultCode"></param>
            <param name="sliderUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.ResultCheckSms(System.Int32,System.String,System.String)">
            <summary>
            Construct check sms result
            </summary>
            <param name="resultCode"></param>
            <param name="smsPhone"></param>
            <param name="smsCountry"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.WtLoginEvent.ResultRefreshSms(System.Int32)">
            <summary>
            Construct refresh sms result
            </summary>
            <param name="resultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.Model.CaptchaEvent.Create(Konata.Core.Events.Model.WtLoginEvent)">
            <summary>
            Construct event request
            </summary>
            <param name="wtEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.PacketEvent.Create(System.Byte[])">
            <summary>
            Construct packet event
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.PacketEvent.Push(System.Byte[])">
            <summary>
            Construct packet push event
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Events.ProtocolEvent.SetSessionSequence(System.Int32)">
            <summary>
            Set session sequence
            </summary>
            <param name="sessionSeq"></param>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.Login(Konata.Core.Bot)">
            <summary>
            Bot login
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.Logout(Konata.Core.Bot)">
            <summary>
            Disconnect the socket and logout
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.SubmitSliderTicket(Konata.Core.Bot,System.String)">
            <summary>
            Submit Slider ticket while login
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="ticket"><b>[In]</b> Slider ticket</param>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.SubmitSmsCode(Konata.Core.Bot,System.String)">
            <summary>
            Submit Sms code while login
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="code"><b>[In]</b> Sms code</param>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.GetGroupList(Konata.Core.Bot,System.Boolean)">
            <summary>
            Get group list
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="forceUpdate"><b>[In]</b> Force update. </param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.GetFriendList(Konata.Core.Bot,System.Boolean)">
            <summary>
            Get friend list
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="forceUpdate"><b>[In]</b> Force update. </param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.GetCsrfToken(Konata.Core.Bot)">
            <summary>
            Get csrf token <br/>
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.GetOnlineStatus(Konata.Core.Bot)">
            <summary>
            Get online status
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.ImageOcr(Konata.Core.Bot,Konata.Core.Message.Model.ImageChain)">
            <summary>
            Image ocr
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="image">The image</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.BotExt.IsOnline(Konata.Core.Bot)">
            <summary>
            Is Online
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.SendFriendMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.MessageBuilder)">
            <summary>
            Send the message to a friend
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="friendUin"><b>[In]</b> Friend uin. </param>
            <param name="builder"><b>[In]</b> Message chain builder. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.SendFriendMessage(Konata.Core.Bot,System.UInt32,System.String)">
            <summary>
            Send the message to a friend
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="friendUin"><b>[In]</b> Friend uin. </param>
            <param name="message"><b>[In]</b> Text message. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.SendFriendMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.BaseChain[])">
            <summary>
            Send the message to a friend
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="friendUin"><b>[In]</b> Friend uin. </param>
            <param name="chains"><b>[In]</b> Message chains. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.SendFriendMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Send the message to a friend
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="friendUin"><b>[In]</b> Friend uin. </param>
            <param name="chain"><b>[In]</b> Message chain. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.SendFriendPoke(Konata.Core.Bot,System.UInt32)">
            <summary>
            Poke Friend
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="friendUin"><b>[In]</b> Friend uin. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.ApproveFriendRequest(Konata.Core.Bot,System.UInt32,System.Int64)">
            <summary>
            Process friend request message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="reqUin"><b>[In]</b> Group uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.FriendRequestEvent.Token"/></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.FriendExt.DeclineFriendRequest(Konata.Core.Bot,System.UInt32,System.Int64,System.Boolean)">
            <summary>
            Process friend request message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="reqUin"><b>[In]</b> Group uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.FriendRequestEvent.Token"/></param>
            <param name="preventRequest"><b>[In] [Opt]</b> Prevent this request</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GroupKickMember(Konata.Core.Bot,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Kick the member in a given group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="preventRequest"><b>[In]</b> Flag to prevent member request or no. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GroupMuteMember(Konata.Core.Bot,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Mute the member in a given group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="timeSeconds"><b>[In]</b> Mute time. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GroupPromoteAdmin(Konata.Core.Bot,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Promote the member to admin in a given group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="toggleAdmin"><b>[In]</b> Flag to toggle set or unset. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GroupSetSpecialTitle(Konata.Core.Bot,System.UInt32,System.UInt32,System.String,System.UInt32)">
            <summary>
            Set special title
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <param name="memberUin"><b>[In]</b> Member uin being operated. </param>
            <param name="specialTitle"><b>[In]</b> Special title. </param>
            <param name="expiredTime"><b>[In]</b> Expired time. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GroupLeave(Konata.Core.Bot,System.UInt32)">
            <summary>
            Leave group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin being operated. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.SendGroupPoke(Konata.Core.Bot,System.UInt32,System.UInt32)">
            <summary>
            Poke Group Member
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="memberUin"><b>[In]</b> Member uin. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.OperationFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.SendGroupMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.MessageBuilder)">
            <summary>
            Send message to the group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="builder"><b>[In]</b> Message chain builder. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.SendGroupMessage(Konata.Core.Bot,System.UInt32,System.String)">
            <summary>
            Send message to the group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="message"><b>[In]</b> Text message. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.SendGroupMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.BaseChain[])">
            <summary>
            Send message to the group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="chains"><b>[In]</b> Message chains. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.SendGroupMessage(Konata.Core.Bot,System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Send message to the group
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="chain"><b>[In]</b> Message chain. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.RecallMessage(Konata.Core.Bot,Konata.Core.Message.MessageStruct)">
            <summary>
            Recall a message
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="message"><b>[In]</b> Message struct. </param>
            <returns>Return true for operation successfully.</returns>
            <exception cref="T:Konata.Core.Exceptions.Model.MessagingException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.UploadGroupImage(Konata.Core.Bot,Konata.Core.Message.Model.ImageChain,System.UInt32)">
            <summary>
            Upload the image manually
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="image"><b>[In]</b> Image to upload. </param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GetGroupMemberList(Konata.Core.Bot,System.UInt32,System.Boolean)">
            <summary>
            Get member member list
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin. </param>
            <param name="forceUpdate"><b>[In]</b> Force update. </param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.GetGroupMemberInfo(Konata.Core.Bot,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Get member info
            </summary>
            <param name="bot"><b>[In]</b> Bot instance</param>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="memberUin"><b>[In]</b> Member uin</param>
            <param name="forceUpdate"><b>[In] [Opt]</b> Force update</param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.SyncFailedException"></exception>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.ApproveGroupInvitation(Konata.Core.Bot,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Process group invitation message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="inviterUin"><b>[In]</b> Inviter uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.GroupInviteEvent.Token"/></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.DeclineGroupInvitation(Konata.Core.Bot,System.UInt32,System.UInt32,System.Int64,System.String,System.Boolean)">
            <summary>
            Process group invitation message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="inviterUin"><b>[In]</b> Inviter uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.GroupInviteEvent.Token"/></param>
            <param name="reason"><b>[In] [Opt]</b> The reason string</param>
            <param name="preventRequest"><b>[In] [Opt]</b> Prevent this request</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.ApproveGroupRequestJoin(Konata.Core.Bot,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Process group request join message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="reqUin"><b>[In]</b> Inviter uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.GroupInviteEvent.Token"/></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.Api.GroupExt.DeclineGroupRequestJoin(Konata.Core.Bot,System.UInt32,System.UInt32,System.Int64,System.String,System.Boolean)">
            <summary>
            Process group request join message
            </summary>
            <param name="bot"><b>[In]</b> <see cref="T:Konata.Core.Bot"/> instance</param>
            <param name="groupUin"><b>[In]</b> Group uin</param>
            <param name="reqUin"><b>[In]</b> Inviter uin</param>
            <param name="token"><b>[In]</b> Request <see cref="P:Konata.Core.Events.Model.GroupInviteEvent.Token"/></param>
            <param name="reason"><b>[In] [Opt]</b> The reason string</param>
            <param name="preventRequest"><b>[In] [Opt]</b> Prevent this request</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.BotFather.Create(Konata.Core.Common.BotConfig,Konata.Core.Common.BotDevice,Konata.Core.Common.BotKeyStore)">
            <summary>
            Create a bot instance
            </summary>
            <param name="config"></param>
            <param name="device"></param>
            <param name="keystore"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Interfaces.BotFather.Create(System.String,System.String,Konata.Core.Common.BotConfig@,Konata.Core.Common.BotDevice@,Konata.Core.Common.BotKeyStore@,Konata.Core.Common.OicqProtocol)">
            <summary>
            Create a bot instance
            </summary>
            <param name="uin"></param>
            <param name="passwd"></param>
            <param name="config"></param>
            <param name="device"></param>
            <param name="keystore"></param>
            <param name="protocol"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.BaseChain.ToProtoBuf">
            <summary>
            Serialize to protobuf<br/>
            // TODO Serialize
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.BaseChain.ToPreviewString">
            <summary>
            To qq generic string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.BaseChain.GetArgs(System.String)">
            <summary>
            Get arguments of a code string
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.BaseChain.Escape(System.String,System.Boolean)">
            <summary>
            Escape the string
            </summary>
            <param name="content"></param>
            <param name="comma"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.BaseChain.UnEscape(System.String)">
            <summary>
            UnEscape the string
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.#ctor">
            <summary>
            Create builder
            </summary>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.#ctor(Konata.Core.Message.BaseChain[])">
            <summary>
            Create builder with chains
            </summary>
            <param name="chains"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.#ctor(System.Collections.Generic.IEnumerable{Konata.Core.Message.BaseChain})">
            <summary>
            Create builder with chains
            </summary>
            <param name="chains"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.#ctor(System.String)">
            <summary>
            Create builder with an initial string
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Build">
            <summary>
            Build a message chain
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Eval(System.String)">
            <summary>
            Convert a text message to chain
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Add(Konata.Core.Message.BaseChain)">
            <summary>
            Add a chain
            </summary>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Add(System.Collections.Generic.IEnumerable{Konata.Core.Message.BaseChain})">
            <summary>
            Add chains
            </summary>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Text(System.String)">
            <summary>
            Plain text
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.At(System.UInt32)">
            <summary>
            At chain
            </summary>
            <param name="uin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.QFace(System.Int32)">
            <summary>
            Qface chain
            </summary>
            <param name="faceId"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Image(System.Byte[])">
            <summary>
            Image chain
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Image(System.String)">
            <summary>
            Image chain
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageBuilder.Record(System.String)">
            <summary>
            Record chain
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.MessageChain.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.Add(Konata.Core.Message.BaseChain)">
            <summary>
            Add chain
            </summary>
            <param name="chain"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.AddRange(System.Collections.Generic.IEnumerable{Konata.Core.Message.BaseChain})">
            <summary>
            Add chains
            </summary>
            <param name="chains"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.ToString">
            <summary>
            Convert chain to code string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.ToPreviewString">
            <summary>
            Convert chain to preview string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.FindChain``1">
            <summary>
            Find chains
            </summary>
            <typeparam name="TChain"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.GetChain``1">
            <summary>
            Get a chain
            </summary>
            <typeparam name="TChain"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.op_BitwiseOr(Konata.Core.Message.MessageChain,Konata.Core.Message.BaseChain.ChainType)">
            <summary>
            Filter the message chain with a chain type
            </summary>
            <param name="x"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.op_BitwiseAnd(Konata.Core.Message.MessageChain,Konata.Core.Message.BaseChain.ChainType)">
            <summary>
            Filter the message chain with a chain type
            </summary>
            <param name="x"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.op_BitwiseOr(Konata.Core.Message.MessageChain,Konata.Core.Message.BaseChain.ChainMode)">
            <summary>
            Filter the message chain with a chain mode
            </summary>
            <param name="x"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessageChain.op_BitwiseAnd(Konata.Core.Message.MessageChain,Konata.Core.Message.BaseChain.ChainMode)">
            <summary>
            Filter the message chain with a chain mode
            </summary>
            <param name="x"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.PackUp(Konata.Core.Message.MessageChain,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Pack up message chain to byte
            </summary>
            <param name="input"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.PackMultiMsg(Konata.Core.Message.Model.MultiMsgChain,System.Collections.Generic.List{Konata.Core.Message.Model.MultiMsgChain},Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Pack up multi msg to byte
            </summary>
            <param name="main"></param>
            <param name="sides"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.UnPack(Konata.Core.Utils.Protobuf.ProtoTreeRoot,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Pack up multi msg to byte
            </summary>
            <param name="root"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseJson(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process json chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseXml(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process xml chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseReply(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process reply chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseShortVideo(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process short video chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseRecord(Konata.Core.Utils.Protobuf.ProtoTreeRoot,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Process record chain
            </summary>
            <param name="tree"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseCommonElem(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process image chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseFlash(Konata.Core.Utils.Protobuf.ProtoTreeRoot,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Process image chain
            </summary>
            <param name="tree"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseImage(Konata.Core.Utils.Protobuf.ProtoTreeRoot,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Process image chain
            </summary>
            <param name="tree"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseFile(Konata.Core.Utils.Protobuf.ProtoTreeRoot,Konata.Core.Message.MessagePacker.Mode)">
            <summary>
            Process File chain
            </summary>
            <param name="tree"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseText(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process Text and At chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseAt(System.Byte[])">
            <summary>
            Process Text and At chain
            </summary>
            <param name="leaf"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseQFace(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process QFace chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.MessagePacker.ParseBigQFace(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Process Big QFace chain
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.MessageSlice.Total">
            <summary>
            <b>[Opt] [Out]</b> <br/>
            Total slice count <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageSlice.Index">
            <summary>
            <b>[Opt] [Out]</b> <br/>
            Current slice id <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageSlice.Id">
            <summary>
            <b>[Opt] [Out]</b> <br/>
            Slice flags <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Sequence">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Uuid">
            <summary>
            Uuid
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Random">
            <summary>
            Random
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Type">
            <summary>
            Source type
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Chain">
            <summary>
            <b>[In] [Out]</b> <br/>
            Message chain <br/>
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Sender">
            <summary>
            <b>[In] [Out]</b>     <br/>
            Sender info
            </summary>
        </member>
        <member name="P:Konata.Core.Message.MessageStruct.Receiver">
            <summary>
            <b>[In] [Out]</b>     <br/>
            Receiver info
            </summary>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.#ctor(System.UInt32,System.String,System.DateTime)">
            <summary>
            Construct fake source info
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
            <param name="messageTime"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.#ctor(System.UInt32,System.String,System.UInt32,Konata.Core.Message.MessageChain)">
            <summary>
            Construct message information for message outgoing
            </summary>
            <param name="senderUin"></param>
            <param name="senderName"></param>
            <param name="receiverUin"></param>
            <param name="chain"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.#ctor(Konata.Core.Message.MessageStruct.SourceType)">
            <summary>
            Construct message information for message incoming
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.#ctor(System.UInt32,System.String,Konata.Core.Message.MessageChain,Konata.Core.Message.MessageStruct.SourceType)">
            <summary>
            Construct fake source info
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
            <param name="chain"></param>
            <param name="type"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetSourceInfo(System.UInt32,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Set source info
            </summary>
            <param name="sequence"></param>
            <param name="rand"></param>
            <param name="time"></param>
            <param name="uuid"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetSenderInfo(System.UInt32,System.String)">
            <summary>
            Set sender info
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetSenderUin(System.UInt32)">
            <summary>
            Set sender uin
            </summary>
            <param name="uin"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetSenderName(System.String)">
            <summary>
            Set sender name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetReceiverInfo(System.UInt32,System.String)">
            <summary>
            Set group info
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
            
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetReceiverUin(System.UInt32)">
            <summary>
            Set receiver uin
            </summary>
            <param name="uin"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetReceiverName(System.String)">
            <summary>
            Set receiver name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Konata.Core.Message.MessageStruct.SetMessage(Konata.Core.Message.MessageChain)">
            <summary>
            Set message
            </summary>
            <param name="chain"></param>
        </member>
        <member name="P:Konata.Core.Message.Model.AtChain.DisplayString">
            <summary>
            Display string
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.AtChain.Create(System.UInt32)">
            <summary>
            Create an at chain
            </summary>
            <param name="memberUin"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.AtChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.BFaceChain.Create(System.String,System.UInt32,System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.BFaceChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.FlashImageChain.CreateFromFile(System.String)">
            <summary>
            Create a flash image chain
            </summary>
            <param name="filepath"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.FlashImageChain.CreateFromBase64(System.String)">
            <summary>
            Create a flash image chain from plain base64 <br />
            Not including the header 'base64://'
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.FlashImageChain.CreateFromUrl(System.String)">
            <summary>
            Create a flash image chain from url (limit 10MB)
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.FlashImageChain.CreateFromImageChain(Konata.Core.Message.Model.ImageChain)">
            <summary>
            Create a flash image chain
            </summary>
            <param name="chain"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.FlashImageChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.ImageUrl">
            <summary>
            Image Url
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.FileHash">
            <summary>
            File hash
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.HashData">
            <summary>
            MD5 byte[]
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.FileData">
            <summary>
            Image data
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.FileLength">
            <summary>
            Image data length
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.Width">
            <summary>
            Image width
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.Height">
            <summary>
            Image height
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.ImageType">
            <summary>
            Image type
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ImageChain.PicUpInfo">
            <summary>
            PicUp information
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.SetPicUpInfo(Konata.Core.Events.Model.PicUpInfo)">
            <summary>
            Set PicUp info
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.Create(System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,Konata.Core.Message.Model.ImageType)">
            <summary>
            Create an image chain
            </summary>
            <param name="url"></param>
            <param name="fileName"></param>
            <param name="fileHash"></param>
            <param name="length"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.Create(System.Byte[])">
            <summary>
            Create an image chain
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.CreateFromFile(System.String)">
            <summary>
            Create an image chain
            </summary>
            <param name="filepath"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.CreateFromBase64(System.String)">
            <summary>
            Create an image chain from plain base64 <br />
            Not including the header 'base64://'
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.CreateFromUrl(System.String)">
            <summary>
            Create an image chain from url (limit 10MB)
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.SetImageUrl(System.String)">
            <summary>
            Set image url
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.SetImageData(System.Byte[])">
            <summary>
            Set image data
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.ImageChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Message.Model.ImageType">
            <summary>
            Image type
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.JsonChain.Content">
            <summary>
            Json content
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.JsonChain.Create(System.String)">
            <summary>
            Create a json chain
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.JsonChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.Model.MultiMsgChain.Messages">
            <summary>
            Messages
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.MultiMsgChain.MultiMsgUpInfo">
            <summary>
            MultiMsg up information
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.MultiMsgChain.PackedData">
            <summary>
            Packed data
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.MultiMsgChain.FileName">
            <summary>
            File name guid
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.Add(Konata.Core.Message.MessageStruct)">
            <summary>
            Add message
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.AddMessage(Konata.Core.Message.MessageStruct)">
            <summary>
            Add message
            </summary>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.AddMessage(System.UInt32,System.String,Konata.Core.Message.MessageChain)">
            <summary>
            Add message
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.AddMessage(System.UInt32,System.String,Konata.Core.Message.BaseChain)">
            <summary>
            Add message
            </summary>
            <param name="uin"></param>
            <param name="name"></param>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.SetMultiMsgUpInfo(Konata.Core.Events.Model.MultiMsgUpInfo,System.Byte[])">
            <summary>
            Set upload info
            </summary>
            <param name="info"></param>
            <param name="packed"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.MultiMsgChain.Create">
            <summary>
            Create MultiMsg chain
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.QFaceChain.FaceId">
            <summary>
            Face id
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.QFaceChain.FaceName">
            <summary>
            Face name
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.QFaceChain.BigFaceId">
            <summary>
            Big face id
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.QFaceChain.Big">
            <summary>
            Is big face
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.QFaceChain.Create(System.Int32,System.Boolean)">
            <summary>
             Create a qface chain
            </summary>
            <param name="id"></param>
            <param name="big"></param>
            <returns></returns>
            <exception cref="T:Konata.Core.Exceptions.Model.InvalidFaceIdException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.QFaceChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.RecordUrl">
            <summary>
            Record url (obsolete)
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.SelfUin">
            <summary>
            Self uin
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.FileHash">
            <summary>
            File hash
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.HashData">
            <summary>
            File hash data
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.FileData">
            <summary>
            File data
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.FileLength">
            <summary>
            File length
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.TimeSeconds">
            <summary>
            Record duration
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.RecordType">
            <summary>
            Record type
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.RecordChain.PttUpInfo">
            <summary>
            Ptt upload information
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.SetPttUpInfo(System.UInt32,Konata.Core.Events.Model.PttUpInfo)">
            <summary>
            Set Upload id
            </summary>
            <param name="selfUin"></param>
            <param name="info"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.Create(System.String,System.String,System.String)">
            <summary>
            Create a record chain
            </summary>
            <param name="url"></param>
            <param name="fileName"></param>
            <param name="fileHash"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.Create(System.Byte[])">
            <summary>
            Create a record chain
            </summary>
            <param name="audio"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.CreateFromFile(System.String)">
            <summary>
            Create a record chain
            </summary>
            <param name="filepath"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.CreateFromBase64(System.String)">
            <summary>
            Create a record chain from plain base64 <br />
            Not including the header 'base64://'
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.CreateFromUrl(System.String)">
            <summary>
            Create a record chain from url (limit 10MB)
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.RecordChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Message.Model.RecordType">
            <summary>
            Record type
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ReplyChain.Uin">
            <summary>
            Reply uin
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ReplyChain.Sequence">
            <summary>
            Sequence of reply message
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ReplyChain.Uuid">
            <summary>
            Uuid of reply message
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ReplyChain.Time">
            <summary>
            Time of reply message
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.ReplyChain.Preview">
            <summary>
            Reply message preview
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.ReplyChain.Create(Konata.Core.Message.MessageStruct)">
            <summary>
            Create a reply chain
            </summary>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ReplyChain.Create(System.UInt32,System.UInt32,System.Int64,System.UInt32,System.String)">
            <summary>
            Create a reply chain
            </summary>
            <param name="uin"></param>
            <param name="sequence"></param>
            <param name="uuid"></param>
            <param name="time"></param>
            <param name="preview"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.ReplyChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.TextChain.Create(System.String)">
            <summary>
            Create a text chain
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.Model.VideoChain.Width">
            <summary>
            Video frame width
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.VideoChain.Height">
            <summary>
            Video frame height
            </summary>
        </member>
        <member name="P:Konata.Core.Message.Model.VideoChain.Duration">
            <summary>
            Video duration
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.VideoChain.Create(System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Create a video chain
            </summary>
            <param name="fileName"></param>
            <param name="fileHash"></param>
            <param name="storagePath"></param>
            <param name="frameWidth"></param>
            <param name="frameHeight"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Message.Model.VideoChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Message.Model.XmlChain.Content">
            <summary>
            Xml content
            </summary>
        </member>
        <member name="M:Konata.Core.Message.Model.XmlChain.SetContent(System.String)">
            <summary>
            Set xml content
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.XmlChain.Create(System.String)">
            <summary>
            Create a xml chain
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:Konata.Core.Message.Model.XmlChain.Parse(System.String)">
            <summary>
            Parse the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.Highway.HighwayClient.Echo">
            <summary>
            Send Im coming
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.Highway.HighwayClient.DataUp(System.Byte[],System.Byte[],System.Int32,System.Int32,Konata.Core.Packets.Protobuf.Highway.PicUp.CommandId,Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Data Up
            </summary>
            <param name="data"></param>
            <param name="dataMd5"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <param name="cmdId"></param>
            <param name="extend"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.Highway.HighwayUploader.WithUploadArgs(System.UInt32,Konata.Core.Common.AppInfo,System.Int32)">
            <summary>
            Set upload arguments
            </summary>
            <param name="selfUin"></param>
            <param name="appInfo"></param>
            <param name="chunkSize"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Konata.Core.Network.Highway.HighwayUploader.SendRequest(System.String,System.Int32,System.Byte[],System.Byte[],Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Send highway upload request
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="ticket"></param>
            <param name="data"></param>
            <param name="extend"></param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Network.Highway.PicDataUploader.ImageType">
            <summary>
            Image type
            </summary>
        </member>
        <member name="P:Konata.Core.Network.Highway.PicDataUploader.Images">
            <summary>
            Image list
            </summary>
        </member>
        <member name="P:Konata.Core.Network.Highway.PttDataUploader.PttType">
            <summary>
            Ptt type
            </summary>
        </member>
        <member name="P:Konata.Core.Network.TcpClient.ClientListener.Connected">
            <summary>
            Socket connected
            </summary>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.ClientListener.#ctor">
            <summary>
            Construct a tcp client
            </summary>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.ClientListener.Connect(System.String,System.Int32)">
            <summary>
            Connect to the server
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.ClientListener.Disconnect">
            <summary>
            Disconnect
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.ClientListener.Send(System.Byte[],System.Int32)">
            <summary>
            Send data
            </summary>
            <param name="buffer"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.ClientListener.ReceiveLoop(Konata.Core.Network.TcpClient.ClientListener.SocketSession,System.Threading.CancellationToken)">
            <summary>
            Receive the data
            </summary>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.IClientListener.GetPacketLength(System.ReadOnlySpan{System.Byte})">
            <summary>
            Dissect a stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.IClientListener.OnRecvPacket(System.ReadOnlySpan{System.Byte})">
            <summary>
            On handle a packet
            </summary>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.IClientListener.OnDisconnect">
            <summary>
            On client disconnect
            </summary>
        </member>
        <member name="M:Konata.Core.Network.TcpClient.IClientListener.OnSocketError(System.Exception)">
            <summary>
            On socket error
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x55c_1">
            <summary>
            設置取消群管理員
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x570_8">
            <summary>
            群禁言
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x88d_0">
            <summary>
            拉取群聊資料
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x899_0">
            <summary>
            獲取群管理列表
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x8a0_0">
            <summary>
            移除多個群成員
            <TODO> 支援批量移除群成員 </TODO>
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x8a0_1">
            <summary>
            移除單個群成員
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x8fc_2">
            <summary>
            設置群成員頭銜
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Oidb.Model.OidbCmd0x8fc_3">
            <summary>
            設置自身群名片
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.PacketBase">
            <summary>
            消息报文基类
            </summary>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.PutPacket(Konata.Core.Packets.PacketBase)">
            <summary>
            放入 Packet
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.PutPacketEncrypted(Konata.Core.Packets.PacketBase,Konata.Core.Utils.Crypto.ICryptor,System.Byte[])">
            <summary>
            加密 Packet 放入
            </summary>
            <param name="value"></param>
            <param name="cryptor"></param>
            <param name="cryptKey"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.PutTlv(Konata.Core.Packets.PacketBase)">
            <summary>
            放入 Tlv
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.PutProtoNode(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            放入 ProtoNode
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.PutProtoMessage(Google.Protobuf.IMessage)">
            <summary>
            Put proto message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.GetEncryptedBytes(Konata.Core.Utils.Crypto.ICryptor,System.Byte[])">
            <summary>
            獲取打包數據並加密
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.EnterBarrier(Konata.Core.Utils.IO.ByteBuffer.Prefix,Konata.Core.Utils.IO.Endian,System.UInt32)">
            <summary>
            [進入屏障] 在這之後透過 PutMethods 方法組放入的數據將被計算長度
            </summary>
            <param name="prefixFlag"></param>
            <param name="endian"></param>
            <param name="extend"></param>
        </member>
        <member name="M:Konata.Core.Packets.PacketBase.LeaveBarrier">
            <summary>
            [離開屏障] 會立即在加入的數據前寫入長度
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.GroupPicUpRequest.PicInfo">
            <summary>
            Single picture information
            </summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Highway.HwResponse.Parse(System.Byte[])">
            <summary>
            Parse a response
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Highway.PicUpDataUp.#ctor(Konata.Core.Packets.Protobuf.Highway.PicUp.CommandId,Konata.Core.Common.AppInfo,System.UInt32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32,System.Byte[],Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Data up
            </summary>
            <param name="cmdId"></param>
            <param name="peerUin"></param>
            <param name="appInfo"></param>
            <param name="sequence"></param>
            <param name="ticket"></param>
            <param name="fileSize"></param>
            <param name="fileMd5"></param>
            <param name="chunkOffset"></param>
            <param name="chunkSize"></param>
            <param name="chunkMd5"></param>
            <param name="request"></param>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.Highway.Requests.FriendPttUpRequest.RecordInfo">
            <summary>
            Single record information
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.Highway.Requests.GroupPttUpRequest.RecordInfo">
            <summary>
            Single record information
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.OffPicUpRequest.PicInfo">
            <summary>
            Single picture information
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.ProtoMsgWithDraw">
            <summary>
            撤回群訊息 PbMsgWithDraw
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.Msf.StructmsgReflection">
            <summary>Holder for reflection information generated from structmsg.proto</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.StructmsgReflection.Descriptor">
            <summary>File descriptor for structmsg.proto</summary>
        </member>
        <member name="T:Konata.Core.Packets.Protobuf.Msf.structmsg.Types">
            <summary>Container for nested types declared in the structmsg message type.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.NotSeeDynamicFieldNumber">
            <summary>Field number for the "notSeeDynamic" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.HasNotSeeDynamic">
            <summary>Gets whether the "notSeeDynamic" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.ClearNotSeeDynamic">
            <summary>Clears the value of the "notSeeDynamic" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.SetSnFieldNumber">
            <summary>Field number for the "setSn" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.HasSetSn">
            <summary>Gets whether the "setSn" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.AddFrdSNInfo.ClearSetSn">
            <summary>Clears the value of the "setSn" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgKickAdminFieldNumber">
            <summary>Field number for the "GrpMsg_Kick_Admin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgKickAdmin">
            <summary>Gets whether the "GrpMsg_Kick_Admin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgKickAdmin">
            <summary>Clears the value of the "GrpMsg_Kick_Admin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgHiddenGrpFieldNumber">
            <summary>Field number for the "GrpMsg_HiddenGrp" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgHiddenGrp">
            <summary>Gets whether the "GrpMsg_HiddenGrp" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgHiddenGrp">
            <summary>Clears the value of the "GrpMsg_HiddenGrp" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgWordingDownFieldNumber">
            <summary>Field number for the "GrpMsg_WordingDown" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgWordingDown">
            <summary>Gets whether the "GrpMsg_WordingDown" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgWordingDown">
            <summary>Clears the value of the "GrpMsg_WordingDown" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.FrdMsgGetBusiCardFieldNumber">
            <summary>Field number for the "FrdMsg_GetBusiCard" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasFrdMsgGetBusiCard">
            <summary>Gets whether the "FrdMsg_GetBusiCard" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearFrdMsgGetBusiCard">
            <summary>Clears the value of the "FrdMsg_GetBusiCard" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetOfficialAccountFieldNumber">
            <summary>Field number for the "GrpMsg_GetOfficialAccount" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetOfficialAccount">
            <summary>Gets whether the "GrpMsg_GetOfficialAccount" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetOfficialAccount">
            <summary>Clears the value of the "GrpMsg_GetOfficialAccount" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetPayInGroupFieldNumber">
            <summary>Field number for the "GrpMsg_GetPayInGroup" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetPayInGroup">
            <summary>Gets whether the "GrpMsg_GetPayInGroup" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetPayInGroup">
            <summary>Clears the value of the "GrpMsg_GetPayInGroup" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.FrdMsgDiscuss2ManyChatFieldNumber">
            <summary>Field number for the "FrdMsg_Discuss2ManyChat" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasFrdMsgDiscuss2ManyChat">
            <summary>Gets whether the "FrdMsg_Discuss2ManyChat" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearFrdMsgDiscuss2ManyChat">
            <summary>Clears the value of the "FrdMsg_Discuss2ManyChat" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgNotAllowJoinGrpInviteNotFrdFieldNumber">
            <summary>Field number for the "GrpMsg_NotAllowJoinGrp_InviteNotFrd" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgNotAllowJoinGrpInviteNotFrd">
            <summary>Gets whether the "GrpMsg_NotAllowJoinGrp_InviteNotFrd" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgNotAllowJoinGrpInviteNotFrd">
            <summary>Clears the value of the "GrpMsg_NotAllowJoinGrp_InviteNotFrd" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.FrdMsgNeedWaitingMsgFieldNumber">
            <summary>Field number for the "FrdMsg_NeedWaitingMsg" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasFrdMsgNeedWaitingMsg">
            <summary>Gets whether the "FrdMsg_NeedWaitingMsg" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearFrdMsgNeedWaitingMsg">
            <summary>Clears the value of the "FrdMsg_NeedWaitingMsg" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.FrdMsgUint32NeedAllUnreadMsgFieldNumber">
            <summary>Field number for the "FrdMsgUint32NeedAllUnreadMsg" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasFrdMsgUint32NeedAllUnreadMsg">
            <summary>Gets whether the "FrdMsgUint32NeedAllUnreadMsg" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearFrdMsgUint32NeedAllUnreadMsg">
            <summary>Clears the value of the "FrdMsgUint32NeedAllUnreadMsg" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgNeedAutoAdminWordingFieldNumber">
            <summary>Field number for the "GrpMsg_NeedAutoAdminWording" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgNeedAutoAdminWording">
            <summary>Gets whether the "GrpMsg_NeedAutoAdminWording" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgNeedAutoAdminWording">
            <summary>Clears the value of the "GrpMsg_NeedAutoAdminWording" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetTransferGroupMsgFlagFieldNumber">
            <summary>Field number for the "GrpMsgGetTransferGroupMsgFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetTransferGroupMsgFlag">
            <summary>Gets whether the "GrpMsgGetTransferGroupMsgFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetTransferGroupMsgFlag">
            <summary>Clears the value of the "GrpMsgGetTransferGroupMsgFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetQuitPayGroupMsgFlagFieldNumber">
            <summary>Field number for the "GrpMsgGetQuitPayGroupMsgFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetQuitPayGroupMsgFlag">
            <summary>Gets whether the "GrpMsgGetQuitPayGroupMsgFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetQuitPayGroupMsgFlag">
            <summary>Clears the value of the "GrpMsgGetQuitPayGroupMsgFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgSupportInviteAutoJoinFieldNumber">
            <summary>Field number for the "GrpMsgSupportInviteAutoJoin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgSupportInviteAutoJoin">
            <summary>Gets whether the "GrpMsgSupportInviteAutoJoin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgSupportInviteAutoJoin">
            <summary>Clears the value of the "GrpMsgSupportInviteAutoJoin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgMaskInviteAutoJoinFieldNumber">
            <summary>Field number for the "GrpMsgMaskInviteAutoJoin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgMaskInviteAutoJoin">
            <summary>Gets whether the "GrpMsgMaskInviteAutoJoin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgMaskInviteAutoJoin">
            <summary>Clears the value of the "GrpMsgMaskInviteAutoJoin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetDisbandedByAdminFieldNumber">
            <summary>Field number for the "GrpMsg_GetDisbandedByAdmin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetDisbandedByAdmin">
            <summary>Gets whether the "GrpMsg_GetDisbandedByAdmin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetDisbandedByAdmin">
            <summary>Clears the value of the "GrpMsg_GetDisbandedByAdmin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.GrpMsgGetC2CInviteJoinGroupFieldNumber">
            <summary>Field number for the "GrpMsg_GetC2CInviteJoinGroup" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.HasGrpMsgGetC2CInviteJoinGroup">
            <summary>Gets whether the "GrpMsg_GetC2CInviteJoinGroup" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FlagInfo.ClearGrpMsgGetC2CInviteJoinGroup">
            <summary>Clears the value of the "GrpMsg_GetC2CInviteJoinGroup" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.JointFriendFieldNumber">
            <summary>Field number for the "jointFriend" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.HasJointFriend">
            <summary>Gets whether the "jointFriend" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.ClearJointFriend">
            <summary>Clears the value of the "jointFriend" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.BlacklistFieldNumber">
            <summary>Field number for the "blacklist" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.HasBlacklist">
            <summary>Gets whether the "blacklist" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.FriendInfo.ClearBlacklist">
            <summary>Clears the value of the "blacklist" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.GroupAuthTypeFieldNumber">
            <summary>Field number for the "groupAuthType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasGroupAuthType">
            <summary>Gets whether the "groupAuthType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearGroupAuthType">
            <summary>Clears the value of the "groupAuthType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.DisplayActionFieldNumber">
            <summary>Field number for the "displayAction" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasDisplayAction">
            <summary>Gets whether the "displayAction" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearDisplayAction">
            <summary>Clears the value of the "displayAction" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.AlertFieldNumber">
            <summary>Field number for the "alert" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasAlert">
            <summary>Gets whether the "alert" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearAlert">
            <summary>Clears the value of the "alert" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.DetailAlertFieldNumber">
            <summary>Field number for the "detailAlert" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasDetailAlert">
            <summary>Gets whether the "detailAlert" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearDetailAlert">
            <summary>Clears the value of the "detailAlert" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.OtherAdminDoneFieldNumber">
            <summary>Field number for the "otherAdminDone" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasOtherAdminDone">
            <summary>Gets whether the "otherAdminDone" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearOtherAdminDone">
            <summary>Clears the value of the "otherAdminDone" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.AppPrivilegeFlagFieldNumber">
            <summary>Field number for the "appPrivilegeFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.HasAppPrivilegeFlag">
            <summary>Gets whether the "appPrivilegeFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.GroupInfo.ClearAppPrivilegeFlag">
            <summary>Clears the value of the "appPrivilegeFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.SrcTypeFieldNumber">
            <summary>Field number for the "srcType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.HasSrcType">
            <summary>Gets whether the "srcType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.ClearSrcType">
            <summary>Clears the value of the "srcType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.SrcCodeFieldNumber">
            <summary>Field number for the "srcCode" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.HasSrcCode">
            <summary>Gets whether the "srcCode" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.ClearSrcCode">
            <summary>Clears the value of the "srcCode" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.WaitStateFieldNumber">
            <summary>Field number for the "waitState" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.HasWaitState">
            <summary>Gets whether the "waitState" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgInviteExt.ClearWaitState">
            <summary>Clears the value of the "waitState" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.JoinGrpTimeFieldNumber">
            <summary>Field number for the "joinGrpTime" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.HasJoinGrpTime">
            <summary>Gets whether the "joinGrpTime" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.ClearJoinGrpTime">
            <summary>Clears the value of the "joinGrpTime" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.QuitGrpTimeFieldNumber">
            <summary>Field number for the "quitGrpTime" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.HasQuitGrpTime">
            <summary>Gets whether the "quitGrpTime" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.MsgPayGroupExt.ClearQuitGrpTime">
            <summary>Clears the value of the "quitGrpTime" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.NumFieldNumber">
            <summary>Field number for the "num" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasNum">
            <summary>Gets whether the "num" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearNum">
            <summary>Clears the value of the "num" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.FollowingFriendSeqFieldNumber">
            <summary>Field number for the "followingFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasFollowingFriendSeq">
            <summary>Gets whether the "followingFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearFollowingFriendSeq">
            <summary>Clears the value of the "followingFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.FollowingGroupSeqFieldNumber">
            <summary>Field number for the "followingGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasFollowingGroupSeq">
            <summary>Gets whether the "followingGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearFollowingGroupSeq">
            <summary>Clears the value of the "followingGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.FlagFieldNumber">
            <summary>Field number for the "flag" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.LanguageFieldNumber">
            <summary>Field number for the "language" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasLanguage">
            <summary>Gets whether the "language" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearLanguage">
            <summary>Clears the value of the "language" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasVersion">
            <summary>Gets whether the "version" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearVersion">
            <summary>Clears the value of the "version" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.FriendMsgTypeFlagFieldNumber">
            <summary>Field number for the "friendMsgTypeFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasFriendMsgTypeFlag">
            <summary>Gets whether the "friendMsgTypeFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearFriendMsgTypeFlag">
            <summary>Clears the value of the "friendMsgTypeFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ReqMsgTypeFieldNumber">
            <summary>Field number for the "reqMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.HasReqMsgType">
            <summary>Gets whether the "reqMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqNextSystemMsg.ClearReqMsgType">
            <summary>Clears the value of the "reqMsgType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.NumFieldNumber">
            <summary>Field number for the "num" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.HasNum">
            <summary>Gets whether the "num" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.ClearNum">
            <summary>Clears the value of the "num" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.LatestFriendSeqFieldNumber">
            <summary>Field number for the "latestFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.HasLatestFriendSeq">
            <summary>Gets whether the "latestFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.ClearLatestFriendSeq">
            <summary>Clears the value of the "latestFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.LatestGroupSeqFieldNumber">
            <summary>Field number for the "latestGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.HasLatestGroupSeq">
            <summary>Gets whether the "latestGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.ClearLatestGroupSeq">
            <summary>Clears the value of the "latestGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.HasVersion">
            <summary>Gets whether the "version" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.ClearVersion">
            <summary>Clears the value of the "version" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.LanguageFieldNumber">
            <summary>Field number for the "language" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.HasLanguage">
            <summary>Gets whether the "language" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsg.ClearLanguage">
            <summary>Clears the value of the "language" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.SeqFieldNumber">
            <summary>Field number for the "seq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasSeq">
            <summary>Gets whether the "seq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearSeq">
            <summary>Clears the value of the "seq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ReqUinFieldNumber">
            <summary>Field number for the "reqUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasReqUin">
            <summary>Gets whether the "reqUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearReqUin">
            <summary>Clears the value of the "reqUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.SubTypeFieldNumber">
            <summary>Field number for the "subType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasSubType">
            <summary>Gets whether the "subType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearSubType">
            <summary>Clears the value of the "subType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.SrcIdFieldNumber">
            <summary>Field number for the "srcId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasSrcId">
            <summary>Gets whether the "srcId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearSrcId">
            <summary>Clears the value of the "srcId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.SubSrcIdFieldNumber">
            <summary>Field number for the "subSrcId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasSubSrcId">
            <summary>Gets whether the "subSrcId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearSubSrcId">
            <summary>Clears the value of the "subSrcId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.GroupMsgTypeFieldNumber">
            <summary>Field number for the "groupMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasGroupMsgType">
            <summary>Gets whether the "groupMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearGroupMsgType">
            <summary>Clears the value of the "groupMsgType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ActionInfoFieldNumber">
            <summary>Field number for the "actionInfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.LanguageFieldNumber">
            <summary>Field number for the "language" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.HasLanguage">
            <summary>Gets whether the "language" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgAction.ClearLanguage">
            <summary>Clears the value of the "language" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.NumFieldNumber">
            <summary>Field number for the "num" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasNum">
            <summary>Gets whether the "num" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearNum">
            <summary>Clears the value of the "num" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.LatestFriendSeqFieldNumber">
            <summary>Field number for the "latestFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasLatestFriendSeq">
            <summary>Gets whether the "latestFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearLatestFriendSeq">
            <summary>Clears the value of the "latestFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.LatestGroupSeqFieldNumber">
            <summary>Field number for the "latestGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasLatestGroupSeq">
            <summary>Gets whether the "latestGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearLatestGroupSeq">
            <summary>Clears the value of the "latestGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasVersion">
            <summary>Gets whether the "version" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearVersion">
            <summary>Clears the value of the "version" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.FlagFieldNumber">
            <summary>Field number for the "flag" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.LanguageFieldNumber">
            <summary>Field number for the "language" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasLanguage">
            <summary>Gets whether the "language" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearLanguage">
            <summary>Clears the value of the "language" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.IsGetFrdRibbonFieldNumber">
            <summary>Field number for the "isGetFrdRibbon" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasIsGetFrdRibbon">
            <summary>Gets whether the "isGetFrdRibbon" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearIsGetFrdRibbon">
            <summary>Clears the value of the "isGetFrdRibbon" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.IsGetGrpRibbonFieldNumber">
            <summary>Field number for the "isGetGrpRibbon" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasIsGetGrpRibbon">
            <summary>Gets whether the "isGetGrpRibbon" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearIsGetGrpRibbon">
            <summary>Clears the value of the "isGetGrpRibbon" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.FriendMsgTypeFlagFieldNumber">
            <summary>Field number for the "friendMsgTypeFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasFriendMsgTypeFlag">
            <summary>Gets whether the "friendMsgTypeFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearFriendMsgTypeFlag">
            <summary>Clears the value of the "friendMsgTypeFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ReqMsgTypeFieldNumber">
            <summary>Field number for the "reqMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.HasReqMsgType">
            <summary>Gets whether the "reqMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgNew.ClearReqMsgType">
            <summary>Clears the value of the "reqMsgType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.LatestFriendSeqFieldNumber">
            <summary>Field number for the "latestFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.HasLatestFriendSeq">
            <summary>Gets whether the "latestFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ClearLatestFriendSeq">
            <summary>Clears the value of the "latestFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.LatestGroupSeqFieldNumber">
            <summary>Field number for the "latestGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.HasLatestGroupSeq">
            <summary>Gets whether the "latestGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ClearLatestGroupSeq">
            <summary>Clears the value of the "latestGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ReqMsgTypeFieldNumber">
            <summary>Field number for the "reqMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.HasReqMsgType">
            <summary>Gets whether the "reqMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.ReqSystemMsgRead.ClearReqMsgType">
            <summary>Clears the value of the "reqMsgType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.HasResult">
            <summary>Gets whether the "result" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.ClearResult">
            <summary>Clears the value of the "result" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.FailFieldNumber">
            <summary>Field number for the "fail" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.HasFail">
            <summary>Gets whether the "fail" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspHead.ClearFail">
            <summary>Clears the value of the "fail" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HeadFieldNumber">
            <summary>Field number for the "head" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.MsgsFieldNumber">
            <summary>Field number for the "msgs" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.FollowingFriendSeqFieldNumber">
            <summary>Field number for the "followingFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasFollowingFriendSeq">
            <summary>Gets whether the "followingFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearFollowingFriendSeq">
            <summary>Clears the value of the "followingFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.FollowingGroupSeqFieldNumber">
            <summary>Field number for the "followingGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasFollowingGroupSeq">
            <summary>Gets whether the "followingGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearFollowingGroupSeq">
            <summary>Clears the value of the "followingGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.GameNickFieldNumber">
            <summary>Field number for the "gameNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasGameNick">
            <summary>Gets whether the "gameNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearGameNick">
            <summary>Clears the value of the "gameNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.UndecidForQimFieldNumber">
            <summary>Field number for the "undecidForQim" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasUndecidForQim">
            <summary>Gets whether the "undecidForQim" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearUndecidForQim">
            <summary>Clears the value of the "undecidForQim" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.UnReadCount3FieldNumber">
            <summary>Field number for the "unReadCount3" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.HasUnReadCount3">
            <summary>Gets whether the "unReadCount3" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspNextSystemMsg.ClearUnReadCount3">
            <summary>Clears the value of the "unReadCount3" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HeadFieldNumber">
            <summary>Field number for the "head" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.MsgsFieldNumber">
            <summary>Field number for the "msgs" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.UnreadCountFieldNumber">
            <summary>Field number for the "unreadCount" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasUnreadCount">
            <summary>Gets whether the "unreadCount" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearUnreadCount">
            <summary>Clears the value of the "unreadCount" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.LatestFriendSeqFieldNumber">
            <summary>Field number for the "latestFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasLatestFriendSeq">
            <summary>Gets whether the "latestFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearLatestFriendSeq">
            <summary>Clears the value of the "latestFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.LatestGroupSeqFieldNumber">
            <summary>Field number for the "latestGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasLatestGroupSeq">
            <summary>Gets whether the "latestGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearLatestGroupSeq">
            <summary>Clears the value of the "latestGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.FollowingFriendSeqFieldNumber">
            <summary>Field number for the "followingFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasFollowingFriendSeq">
            <summary>Gets whether the "followingFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearFollowingFriendSeq">
            <summary>Clears the value of the "followingFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.FollowingGroupSeqFieldNumber">
            <summary>Field number for the "followingGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasFollowingGroupSeq">
            <summary>Gets whether the "followingGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearFollowingGroupSeq">
            <summary>Clears the value of the "followingGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.DisplayFieldNumber">
            <summary>Field number for the "display" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.HasDisplay">
            <summary>Gets whether the "display" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsg.ClearDisplay">
            <summary>Clears the value of the "display" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.HeadFieldNumber">
            <summary>Field number for the "head" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.DetailFieldNumber">
            <summary>Field number for the "detail" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.HasDetail">
            <summary>Gets whether the "detail" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.ClearDetail">
            <summary>Clears the value of the "detail" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.InvalidDecidedFieldNumber">
            <summary>Field number for the "invalidDecided" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.HasInvalidDecided">
            <summary>Gets whether the "invalidDecided" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.ClearInvalidDecided">
            <summary>Clears the value of the "invalidDecided" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.RemarkResultFieldNumber">
            <summary>Field number for the "remarkResult" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.HasRemarkResult">
            <summary>Gets whether the "remarkResult" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgAction.ClearRemarkResult">
            <summary>Clears the value of the "remarkResult" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HeadFieldNumber">
            <summary>Field number for the "head" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.UnreadFriendCountFieldNumber">
            <summary>Field number for the "unreadFriendCount" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasUnreadFriendCount">
            <summary>Gets whether the "unreadFriendCount" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearUnreadFriendCount">
            <summary>Clears the value of the "unreadFriendCount" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.UnreadGroupCountFieldNumber">
            <summary>Field number for the "unreadGroupCount" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasUnreadGroupCount">
            <summary>Gets whether the "unreadGroupCount" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearUnreadGroupCount">
            <summary>Clears the value of the "unreadGroupCount" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.LatestFriendSeqFieldNumber">
            <summary>Field number for the "latestFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasLatestFriendSeq">
            <summary>Gets whether the "latestFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearLatestFriendSeq">
            <summary>Clears the value of the "latestFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.LatestGroupSeqFieldNumber">
            <summary>Field number for the "latestGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasLatestGroupSeq">
            <summary>Gets whether the "latestGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearLatestGroupSeq">
            <summary>Clears the value of the "latestGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.FollowingFriendSeqFieldNumber">
            <summary>Field number for the "followingFriendSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasFollowingFriendSeq">
            <summary>Gets whether the "followingFriendSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearFollowingFriendSeq">
            <summary>Clears the value of the "followingFriendSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.FollowingGroupSeqFieldNumber">
            <summary>Field number for the "followingGroupSeq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasFollowingGroupSeq">
            <summary>Gets whether the "followingGroupSeq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearFollowingGroupSeq">
            <summary>Clears the value of the "followingGroupSeq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.FriendmsgsFieldNumber">
            <summary>Field number for the "friendmsgs" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.GroupmsgsFieldNumber">
            <summary>Field number for the "groupmsgs" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.RibbonFriendFieldNumber">
            <summary>Field number for the "ribbonFriend" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.RibbonGroupFieldNumber">
            <summary>Field number for the "ribbonGroup" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.DisplayFieldNumber">
            <summary>Field number for the "display" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasDisplay">
            <summary>Gets whether the "display" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearDisplay">
            <summary>Clears the value of the "display" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.GrpMsgDisplayFieldNumber">
            <summary>Field number for the "grpMsgDisplay" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasGrpMsgDisplay">
            <summary>Gets whether the "grpMsgDisplay" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearGrpMsgDisplay">
            <summary>Clears the value of the "grpMsgDisplay" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.OverFieldNumber">
            <summary>Field number for the "over" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasOver">
            <summary>Gets whether the "over" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearOver">
            <summary>Clears the value of the "over" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.GameNickFieldNumber">
            <summary>Field number for the "gameNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasGameNick">
            <summary>Gets whether the "gameNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearGameNick">
            <summary>Clears the value of the "gameNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.UndecidForQimFieldNumber">
            <summary>Field number for the "undecidForQim" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasUndecidForQim">
            <summary>Gets whether the "undecidForQim" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearUndecidForQim">
            <summary>Clears the value of the "undecidForQim" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.UnReadCount3FieldNumber">
            <summary>Field number for the "unReadCount3" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasUnReadCount3">
            <summary>Gets whether the "unReadCount3" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearUnReadCount3">
            <summary>Clears the value of the "unReadCount3" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasSuspiciousFlagFieldNumber">
            <summary>Field number for the "hasSuspiciousFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.HasHasSuspiciousFlag">
            <summary>Gets whether the "hasSuspiciousFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgNew.ClearHasSuspiciousFlag">
            <summary>Clears the value of the "hasSuspiciousFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.HeadFieldNumber">
            <summary>Field number for the "head" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.ChecktypeFieldNumber">
            <summary>Field number for the "checktype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.HasChecktype">
            <summary>Gets whether the "checktype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.RspSystemMsgRead.ClearChecktype">
            <summary>Clears the value of the "checktype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasVersion">
            <summary>Gets whether the "version" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearVersion">
            <summary>Clears the value of the "version" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.SeqFieldNumber">
            <summary>Field number for the "seq" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasSeq">
            <summary>Gets whether the "seq" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearSeq">
            <summary>Clears the value of the "seq" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.TimeFieldNumber">
            <summary>Field number for the "time" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasTime">
            <summary>Gets whether the "time" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearTime">
            <summary>Clears the value of the "time" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ReqUinFieldNumber">
            <summary>Field number for the "reqUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasReqUin">
            <summary>Gets whether the "reqUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearReqUin">
            <summary>Clears the value of the "reqUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.UnreadFlagFieldNumber">
            <summary>Field number for the "unreadFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.HasUnreadFlag">
            <summary>Gets whether the "unreadFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.ClearUnreadFlag">
            <summary>Clears the value of the "unreadFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.StructMsg.MsgFieldNumber">
            <summary>Field number for the "msg" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.SubTypeFieldNumber">
            <summary>Field number for the "subType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasSubType">
            <summary>Gets whether the "subType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearSubType">
            <summary>Clears the value of the "subType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.TitleFieldNumber">
            <summary>Field number for the "title" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasTitle">
            <summary>Gets whether the "title" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearTitle">
            <summary>Clears the value of the "title" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.DescribeFieldNumber">
            <summary>Field number for the "describe" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasDescribe">
            <summary>Gets whether the "describe" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearDescribe">
            <summary>Clears the value of the "describe" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.AdditionalFieldNumber">
            <summary>Field number for the "additional" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasAdditional">
            <summary>Gets whether the "additional" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearAdditional">
            <summary>Clears the value of the "additional" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.SourceFieldNumber">
            <summary>Field number for the "source" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasSource">
            <summary>Gets whether the "source" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearSource">
            <summary>Clears the value of the "source" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.DecidedFieldNumber">
            <summary>Field number for the "decided" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasDecided">
            <summary>Gets whether the "decided" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearDecided">
            <summary>Clears the value of the "decided" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.SrcIdFieldNumber">
            <summary>Field number for the "srcId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasSrcId">
            <summary>Gets whether the "srcId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearSrcId">
            <summary>Clears the value of the "srcId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.SubSrcIdFieldNumber">
            <summary>Field number for the "subSrcId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasSubSrcId">
            <summary>Gets whether the "subSrcId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearSubSrcId">
            <summary>Clears the value of the "subSrcId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActionsFieldNumber">
            <summary>Field number for the "actions" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupCodeFieldNumber">
            <summary>Field number for the "groupCode" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupCode">
            <summary>Gets whether the "groupCode" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupCode">
            <summary>Clears the value of the "groupCode" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActionUinFieldNumber">
            <summary>Field number for the "actionUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActionUin">
            <summary>Gets whether the "actionUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActionUin">
            <summary>Clears the value of the "actionUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupMsgTypeFieldNumber">
            <summary>Field number for the "groupMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupMsgType">
            <summary>Gets whether the "groupMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupMsgType">
            <summary>Clears the value of the "groupMsgType" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupInviterRoleFieldNumber">
            <summary>Field number for the "groupInviterRole" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupInviterRole">
            <summary>Gets whether the "groupInviterRole" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupInviterRole">
            <summary>Clears the value of the "groupInviterRole" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.FriendInfoFieldNumber">
            <summary>Field number for the "friendInfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupInfoFieldNumber">
            <summary>Field number for the "groupInfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActorUinFieldNumber">
            <summary>Field number for the "actorUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActorUin">
            <summary>Gets whether the "actorUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActorUin">
            <summary>Clears the value of the "actorUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActorDescribeFieldNumber">
            <summary>Field number for the "actorDescribe" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActorDescribe">
            <summary>Gets whether the "actorDescribe" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActorDescribe">
            <summary>Clears the value of the "actorDescribe" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.AdditionalListFieldNumber">
            <summary>Field number for the "additionalList" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasAdditionalList">
            <summary>Gets whether the "additionalList" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearAdditionalList">
            <summary>Clears the value of the "additionalList" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.RelationFieldNumber">
            <summary>Field number for the "relation" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasRelation">
            <summary>Gets whether the "relation" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearRelation">
            <summary>Clears the value of the "relation" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqsubtypeFieldNumber">
            <summary>Field number for the "reqsubtype" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqsubtype">
            <summary>Gets whether the "reqsubtype" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqsubtype">
            <summary>Clears the value of the "reqsubtype" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.CloneUinFieldNumber">
            <summary>Field number for the "cloneUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasCloneUin">
            <summary>Gets whether the "cloneUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearCloneUin">
            <summary>Clears the value of the "cloneUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.DiscussUinFieldNumber">
            <summary>Field number for the "discussUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasDiscussUin">
            <summary>Gets whether the "discussUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearDiscussUin">
            <summary>Clears the value of the "discussUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.EimGroupIdFieldNumber">
            <summary>Field number for the "eimGroupId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasEimGroupId">
            <summary>Gets whether the "eimGroupId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearEimGroupId">
            <summary>Clears the value of the "eimGroupId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.InviteExtinfoFieldNumber">
            <summary>Field number for the "inviteExtinfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.PayGroupExtinfoFieldNumber">
            <summary>Field number for the "payGroupExtinfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.SourceFlagFieldNumber">
            <summary>Field number for the "sourceFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasSourceFlag">
            <summary>Gets whether the "sourceFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearSourceFlag">
            <summary>Clears the value of the "sourceFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GameNickFieldNumber">
            <summary>Field number for the "gameNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGameNick">
            <summary>Gets whether the "gameNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGameNick">
            <summary>Clears the value of the "gameNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GameMsgFieldNumber">
            <summary>Field number for the "gameMsg" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGameMsg">
            <summary>Gets whether the "gameMsg" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGameMsg">
            <summary>Clears the value of the "gameMsg" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupFlagext3FieldNumber">
            <summary>Field number for the "groupFlagext3" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupFlagext3">
            <summary>Gets whether the "groupFlagext3" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupFlagext3">
            <summary>Clears the value of the "groupFlagext3" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupOwnerUinFieldNumber">
            <summary>Field number for the "groupOwnerUin" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupOwnerUin">
            <summary>Gets whether the "groupOwnerUin" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupOwnerUin">
            <summary>Clears the value of the "groupOwnerUin" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.DoubtFlagFieldNumber">
            <summary>Field number for the "doubtFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasDoubtFlag">
            <summary>Gets whether the "doubtFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearDoubtFlag">
            <summary>Clears the value of the "doubtFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.WarningTipsFieldNumber">
            <summary>Field number for the "warningTips" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasWarningTips">
            <summary>Gets whether the "warningTips" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearWarningTips">
            <summary>Clears the value of the "warningTips" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.NameMoreFieldNumber">
            <summary>Field number for the "nameMore" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasNameMore">
            <summary>Gets whether the "nameMore" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearNameMore">
            <summary>Clears the value of the "nameMore" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.AddtionFieldNumber">
            <summary>Field number for the "addtion" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasAddtion">
            <summary>Gets whether the "addtion" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearAddtion">
            <summary>Clears the value of the "addtion" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.TransparentGroupNotifyFieldNumber">
            <summary>Field number for the "transparentGroupNotify" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasTransparentGroupNotify">
            <summary>Gets whether the "transparentGroupNotify" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearTransparentGroupNotify">
            <summary>Clears the value of the "transparentGroupNotify" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinFaceidFieldNumber">
            <summary>Field number for the "reqUinFaceid" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinFaceid">
            <summary>Gets whether the "reqUinFaceid" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinFaceid">
            <summary>Clears the value of the "reqUinFaceid" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinNickFieldNumber">
            <summary>Field number for the "reqUinNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinNick">
            <summary>Gets whether the "reqUinNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinNick">
            <summary>Clears the value of the "reqUinNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupNameFieldNumber">
            <summary>Field number for the "groupName" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupName">
            <summary>Gets whether the "groupName" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupName">
            <summary>Clears the value of the "groupName" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActionUinNickFieldNumber">
            <summary>Field number for the "actionUinNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActionUinNick">
            <summary>Gets whether the "actionUinNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActionUinNick">
            <summary>Clears the value of the "actionUinNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.QnaFieldNumber">
            <summary>Field number for the "qna" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasQna">
            <summary>Gets whether the "qna" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearQna">
            <summary>Clears the value of the "qna" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.DetailFieldNumber">
            <summary>Field number for the "detail" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasDetail">
            <summary>Gets whether the "detail" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearDetail">
            <summary>Clears the value of the "detail" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.GroupExtFlagFieldNumber">
            <summary>Field number for the "groupExtFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasGroupExtFlag">
            <summary>Gets whether the "groupExtFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearGroupExtFlag">
            <summary>Clears the value of the "groupExtFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActorUinNickFieldNumber">
            <summary>Field number for the "actorUinNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActorUinNick">
            <summary>Gets whether the "actorUinNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActorUinNick">
            <summary>Clears the value of the "actorUinNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.PicUrlFieldNumber">
            <summary>Field number for the "picUrl" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasPicUrl">
            <summary>Gets whether the "picUrl" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearPicUrl">
            <summary>Clears the value of the "picUrl" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.CloneUinNickFieldNumber">
            <summary>Field number for the "cloneUinNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasCloneUinNick">
            <summary>Gets whether the "cloneUinNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearCloneUinNick">
            <summary>Clears the value of the "cloneUinNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinBusinessCardFieldNumber">
            <summary>Field number for the "reqUinBusinessCard" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinBusinessCard">
            <summary>Gets whether the "reqUinBusinessCard" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinBusinessCard">
            <summary>Clears the value of the "reqUinBusinessCard" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.EimGroupIdNameFieldNumber">
            <summary>Field number for the "eimGroupIdName" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasEimGroupIdName">
            <summary>Gets whether the "eimGroupIdName" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearEimGroupIdName">
            <summary>Clears the value of the "eimGroupIdName" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinPreRemarkFieldNumber">
            <summary>Field number for the "reqUinPreRemark" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinPreRemark">
            <summary>Gets whether the "reqUinPreRemark" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinPreRemark">
            <summary>Clears the value of the "reqUinPreRemark" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActionUinQqNickFieldNumber">
            <summary>Field number for the "actionUinQqNick" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActionUinQqNick">
            <summary>Gets whether the "actionUinQqNick" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActionUinQqNick">
            <summary>Clears the value of the "actionUinQqNick" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ActionUinRemarkFieldNumber">
            <summary>Field number for the "actionUinRemark" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasActionUinRemark">
            <summary>Gets whether the "actionUinRemark" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearActionUinRemark">
            <summary>Clears the value of the "actionUinRemark" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinGenderFieldNumber">
            <summary>Field number for the "reqUinGender" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinGender">
            <summary>Gets whether the "reqUinGender" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinGender">
            <summary>Clears the value of the "reqUinGender" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ReqUinAgeFieldNumber">
            <summary>Field number for the "reqUinAge" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasReqUinAge">
            <summary>Gets whether the "reqUinAge" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearReqUinAge">
            <summary>Clears the value of the "reqUinAge" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.C2CInviteJoinGroupFlagFieldNumber">
            <summary>Field number for the "c2CInviteJoinGroupFlag" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasC2CInviteJoinGroupFlag">
            <summary>Gets whether the "c2CInviteJoinGroupFlag" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearC2CInviteJoinGroupFlag">
            <summary>Clears the value of the "c2CInviteJoinGroupFlag" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.CardSwitchFieldNumber">
            <summary>Field number for the "cardSwitch" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.HasCardSwitch">
            <summary>Gets whether the "cardSwitch" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsg.ClearCardSwitch">
            <summary>Clears the value of the "cardSwitch" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.HasName">
            <summary>Gets whether the "name" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ClearName">
            <summary>Clears the value of the "name" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.HasResult">
            <summary>Gets whether the "result" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ClearResult">
            <summary>Clears the value of the "result" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ActionFieldNumber">
            <summary>Field number for the "action" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.HasAction">
            <summary>Gets whether the "action" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ClearAction">
            <summary>Clears the value of the "action" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ActionInfoFieldNumber">
            <summary>Field number for the "actionInfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.DetailNameFieldNumber">
            <summary>Field number for the "detailName" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.HasDetailName">
            <summary>Gets whether the "detailName" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgAction.ClearDetailName">
            <summary>Clears the value of the "detailName" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasType">
            <summary>Gets whether the "type" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearType">
            <summary>Clears the value of the "type" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.GroupCodeFieldNumber">
            <summary>Field number for the "groupCode" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasGroupCode">
            <summary>Gets whether the "groupCode" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearGroupCode">
            <summary>Clears the value of the "groupCode" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.SigFieldNumber">
            <summary>Field number for the "sig" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasSig">
            <summary>Gets whether the "sig" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearSig">
            <summary>Clears the value of the "sig" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.MsgFieldNumber">
            <summary>Field number for the "msg" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasMsg">
            <summary>Gets whether the "msg" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearMsg">
            <summary>Clears the value of the "msg" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.GroupIdFieldNumber">
            <summary>Field number for the "groupId" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasGroupId">
            <summary>Gets whether the "groupId" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearGroupId">
            <summary>Clears the value of the "groupId" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.RemarkFieldNumber">
            <summary>Field number for the "remark" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasRemark">
            <summary>Gets whether the "remark" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearRemark">
            <summary>Clears the value of the "remark" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.BlacklistFieldNumber">
            <summary>Field number for the "blacklist" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasBlacklist">
            <summary>Gets whether the "blacklist" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearBlacklist">
            <summary>Clears the value of the "blacklist" field</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.AddFrdSNInfoFieldNumber">
            <summary>Field number for the "addFrdSNInfo" field.</summary>
        </member>
        <member name="F:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ReqMsgTypeFieldNumber">
            <summary>Field number for the "reqMsgType" field.</summary>
        </member>
        <member name="P:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.HasReqMsgType">
            <summary>Gets whether the "reqMsgType" field is set</summary>
        </member>
        <member name="M:Konata.Core.Packets.Protobuf.Msf.structmsg.Types.SystemMsgActionInfo.ClearReqMsgType">
            <summary>Clears the value of the "reqMsgType" field</summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T103Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T1118Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T120Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T130Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T163Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T16dBody">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T203Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T322Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T403Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T512Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T522Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T528Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T537Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T546Body">
            <summary>
            Parse of T546 "Pow", migrated from mirai/cai
            </summary>
        </member>
        <member name="M:Konata.Core.Packets.Tlv.Model.T546Body.#ctor(System.Byte[])">
            <summary>
            Parser of T546 data to output the T547
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T547Body">
            <summary>
            Compose of T547 "Pow"
            </summary>
        </member>
        <member name="M:Konata.Core.Packets.Tlv.Model.T547Body.#ctor(Konata.Core.Packets.Tlv.Model.T546Body)">
            <summary>
            Constructor for composing of TLV547 (not parsing), should be directly powered from T546
            struct.pack("!H128sII", 128, dst, elp, cnt) // (big-endian) unsigned short, 128 bytes, unsigned int, unsigned int
            </summary>
            <param name="tlv">original T546</param>
        </member>
        <member name="T:Konata.Core.Packets.Tlv.Model.T550Body">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.Ecdh">
            <summary>
            Ecdh cipher
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.Curve">
            <summary>
            Ecdh curve
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.ShareKey">
            <summary>
            Share key
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.PublicKey">
            <summary>
            Public key
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.Method">
            <summary>
            Encrypt method
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Crypto.EcdhCryptor.MethodId">
            <summary>
            Encrypt method id
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.EcdhCryptor.#ctor(Konata.Core.Utils.Crypto.EcdhCryptor.CryptMethod)">
            <summary>
            Create cryptor
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.EcdhCryptor.GenerateShared(System.Byte[])">
            <summary>
            Key exchange
            </summary>
            <param name="bobPublic"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.TeaCryptor.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            Encrypt data.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.TeaCryptor.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            Decrypt data.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.TeaCryptor.Encrypt(System.Byte[])">
            <summary>
            Encrypt data with default key.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Crypto.TeaCryptor.Decrypt(System.Byte[])">
            <summary>
            Decrypt data with default key.
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.Ecdh.ECDiffieHellman">
            <summary>
            椭圆曲线 Diffie-Hellman (ECDH) 算法
            Reference: https://asecuritysite.com/encryption/ecdh3
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Ecdh.ECDiffieHellman.Curve">
            <summary>
            Curve parameters
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Ecdh.ECDiffieHellman.Secret">
            <summary>
            Secret
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.Ecdh.ECDiffieHellman.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.GetPublicKeyPacked(System.Boolean)">
            <summary>
            Pack public key
            </summary>
            <param name="compress"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.GetSecretPacked">
            <summary>
            Pack secret
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.GetPublicKey">
            <summary>
            Get public key
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.GetSecret">
            <summary>
            Get secret
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.SetSecret(System.Numerics.BigInteger)">
            <summary>
            Set new secret
            </summary>
            <param name="secret"></param>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.KeyExchange(Konata.Core.Utils.Ecdh.EllipticPoint)">
            <summary>
            Key exchange with bob
            </summary>
            <param name="ecpub"></param>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.UnpackPublic(System.Byte[])">
            <summary>
            Decompress public key
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.PackPublic(Konata.Core.Utils.Ecdh.EllipticPoint,System.Boolean)">
            <summary>
            Pack public
            </summary>
            <param name="ecpub"></param>
            <param name="compress"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.PackSecret(System.Numerics.BigInteger)">
            <summary>
            Pack secret
            </summary>
            <param name="ecsec"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.PackShared(Konata.Core.Utils.Ecdh.EllipticPoint)">
            <summary>
            使用MD5对共享密钥打包
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.UnpackSecret(System.Byte[])">
            <summary>
            Unpack secret
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.CreatePublic(System.Numerics.BigInteger)">
            <summary>
            Generate the secret from public
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.CreateSecret">
            <summary>
            Generate the secret
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.CreateShared(System.Numerics.BigInteger,Konata.Core.Utils.Ecdh.EllipticPoint)">
            <summary>
            Calculate shared based on public and secret
            </summary>
            <param name="ecsec"></param>
            <param name="ecpub"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.PointAdd(Konata.Core.Utils.Ecdh.EllipticCurve,Konata.Core.Utils.Ecdh.EllipticPoint,Konata.Core.Utils.Ecdh.EllipticPoint)">
            <summary>
            Point add
            </summary>
            <param name="curve"></param>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.ECDiffieHellman.ModInverse(System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Find modular inverse of <paramref name="a"/> under modulo <paramref name="p"/>.
            <paramref name="p"/> must be prime.
            Reference: https://www.geeksforgeeks.org/multiplicative-inverse-under-modulo-m/
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.Ecdh.EllipticCurve.SecP192k1">
            <summary>
            ref https://neuromancer.sk/std/secg/secp192k1
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.Ecdh.EllipticCurve.Prime256v1">
            <summary>
            ref https://neuromancer.sk/std/x962/prime256v1
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Ecdh.EllipticCurve.CheckOn(Konata.Core.Utils.Ecdh.EllipticPoint)">
            <summary>
            All points on an elliptic curve verify,
            by definition, the curve equation, usually written as
            Y2 = X3 + aX + b
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.ArrayExt.Slices``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Cut an array into pieces.
            </summary>
            <param name="this"></param>
            <param name="blocksz"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.BytesExt.ToHex(System.Byte[],System.Boolean)">
            <summary>
            Convert bytes to hex string
            </summary>
            <param name="data"></param>
            <param name="space"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.BytesExt.Btoa(System.Byte[])">
            <summary>
            Convert bytes to base64 string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.BytesExt.Adler32(System.Byte[])">
            <summary>
            Calculate Adler32 checksum<br/>
            For detailed documentation, please ref
            <a herf="https://en.wikipedia.org/wiki/Adler-32"></a><br/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.BytesExt.Crc32(System.Byte[])">
            <summary>
            Calculate Crc32 checksum
            For detailed documentation, please ref
            <a herf="https://en.wikipedia.org/wiki/Cyclic_redundancy_check"></a><br/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.BytesExt.Md5(System.Byte[])">
            <summary>
            Md5
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.DateTimeExt.Epoch(System.DateTime)">
            <summary>
            Convert DateTime to unix time
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.StringExt.UnHex(System.String)">
            <summary>
            Convert hex string to bytes 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.StringExt.Atob(System.String)">
            <summary>
            Convert base64 string to bytes
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Extensions.StringExt.Atoa(System.String)">
            <summary>
            Convert base64 string to plain string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.FileFormat.FileFormat.DetectAudio(System.Byte[],Konata.Core.Utils.FileFormat.FileFormat.AudioFormat@)">
            <summary>
            Detect audio type
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.FileFormat.FileFormat.GetSilkTime(System.Byte[],System.Int32)">
            <summary>
            Get silk total time
            </summary>
            <param name="data"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.FileFormat.FileFormat.DetectImage(System.Byte[],Konata.Core.Utils.FileFormat.FileFormat.ImageFormat@,System.UInt32@,System.UInt32@)">
            <summary>
            Detect image type
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Utils.Guid">
            <summary>
            GUID Generator
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Guid.GenerateBytes">
            <summary>
            Generate a guid as bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Guid.GenerateString">
            <summary>
            Generate a guid as a string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Utils.IO.ByteBuffer">
            <summary>
            字节流缓冲
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.IO.ByteBuffer.Prefix">
            <summary>
            报文前缀类型
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.IO.ByteBuffer.Prefix.LengthOnly">
            <summary>
            仅包含数据长度
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.IO.ByteBuffer.Prefix.WithPrefix">
            <summary>
            前缀+数据总长度
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutShortBE(System.Int16)">
            <summary>
            以 Big Endian 字节序, 放入 short 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutShortLE(System.Int16)">
            <summary>
            以 Little Endian 字节序, 放入 short 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutShort(System.Int16,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 short 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUshortBE(System.UInt16)">
            <summary>
            以 Big Endian 字节序, 放入 ushort 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUshortLE(System.UInt16)">
            <summary>
            以 Little Endian 字节序, 放入 ushort 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUshort(System.UInt16,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 ushort 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutIntBE(System.Int32)">
            <summary>
            以 Big Endian 字节序, 放入 int 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutIntLE(System.Int32)">
            <summary>
            以 Little Endian 字节序, 放入 int 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutInt(System.Int32,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 int 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUintBE(System.UInt32)">
            <summary>
            以 Big Endian 字节序, 放入 uint 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUintLE(System.UInt32)">
            <summary>
            以 Little Endian 字节序, 放入 uint 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUint(System.UInt32,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 uint 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutLongBE(System.Int64)">
            <summary>
            以 Big Endian 字节序, 放入 long 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutLongLE(System.Int64)">
            <summary>
            以 Little Endian 字节序, 放入 long 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutLong(System.Int64,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 long 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUlongBE(System.UInt64)">
            <summary>
            以 Big Endian 字节序, 放入 ulong 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUlongLE(System.UInt64)">
            <summary>
            以 Little Endian 字节序, 放入 ulong 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutUlong(System.UInt64,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 ulong 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutFloatBE(System.Single)">
            <summary>
            以 Big Endian 字节序, 放入 float 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutFloatLE(System.Single)">
            <summary>
            以 Little Endian 字节序, 放入 float 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutFloat(System.Single,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 float 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutDoubleBE(System.Double)">
            <summary>
            以 Big Endian 字节序, 放入 double 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutDoubleLE(System.Double)">
            <summary>
            以 Little Endian 字节序, 放入 double 
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutDouble(System.Double,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 double 
            </summary>
            <param name="value">值</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutBoolBE(System.Boolean,System.Byte)">
            <summary>
            以 Big Endian 字节序, 放入 bool
            </summary>
            <param name="value">值</param>
            <param name="length">占用长度</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutBoolLE(System.Boolean,System.Byte)">
            <summary>
            以 Little Endian 字节序, 放入 bool
            </summary>
            <param name="value">值</param>
            <param name="length">占用长度</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutBool(System.Boolean,System.Byte,Konata.Core.Utils.IO.Endian)">
            <summary>
            放入 bool 
            </summary>
            <param name="value">值</param>
            <param name="length">长度</param>
            <param name="endian">字节序</param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutString(System.String,Konata.Core.Utils.IO.ByteBuffer.Prefix,System.Byte)">
            <summary>
            放入字符串
            </summary>
            <param name="value"></param>
            <param name="prefixFlag"></param>
            <param name="limitedLength"></param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutHexString(System.String,Konata.Core.Utils.IO.ByteBuffer.Prefix,System.Byte)">
            <summary>
            放入 Hex字符串
            </summary>
            <param name="value"></param>
            <param name="prefixFlag"></param>
            <param name="limitedLength"></param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.PutByteBuffer(Konata.Core.Utils.IO.ByteBuffer,Konata.Core.Utils.IO.ByteBuffer.Prefix,System.Byte)">
            <summary>
            放入 ByteBuffer
            </summary>
            <param name="value"></param>
            <param name="prefixFlag"></param>
            <param name="limitedLength"></param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.EatBytes(System.UInt32)">
            <summary>
            吃掉數據 φ(゜▽゜*)♪
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.GetBytes">
            <summary>
            獲取數據
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.ToString">
            <summary>
            到字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Utils.IO.ByteBuffer.Length">
            <summary>
            缓冲区总长度
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.IO.ByteBuffer.RemainLength">
            <summary>
            缓冲区读指针到末尾长度
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.IO.ByteBuffer.MinBufferBase">
            <summary>
            最小缓冲
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.IO.ByteBuffer.MinBufferSize">
            <summary>
            最小缓冲
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteBuffer.WriteData(System.Byte[])">
            <summary>
            将新数据写入缓冲区
            </summary>
            <param name="data">字节数组</param>
        </member>
        <member name="F:Konata.Core.Utils.IO.Endian.Big">
            <summary>
            大端
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.IO.Endian.Little">
            <summary>
            小端
            </summary>
        </member>
        <member name="F:Konata.Core.Utils.IO.Endian.FollowMachine">
            <summary>
            随运行时主机
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.IO.ByteConverter">
            <summary>
            值类型转byte工具
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.IO.ByteConverter.BoolToBytes(System.Boolean,System.UInt32,Konata.Core.Utils.IO.Endian)">
            <summary>
            布尔转bytes
            </summary>
            <param name="value">值</param>
            <param name="length">长度</param>
            <param name="endian">高低位,默认跟随主机配置</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.Deflate(System.Byte[],System.IO.Compression.CompressionLevel)">
            <summary>
            Deflate
            </summary>
            <param name="data"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.Inflate(System.Byte[])">
            <summary>
            Inflate
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.ZCompress(System.Byte[])">
            <summary>
            Zlib compress
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.ZCompress(System.String)">
            <summary>
            Zlib compress
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.ZDecompress(System.Byte[])">
            <summary>
            Zlib decompress
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.GZip(System.Byte[])">
            <summary>
            Gzip compress
            For detailed documentation, please ref
            <a herf="https://docs.fileformat.com/compression/gz/#gz-file-header"></a><br/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.IO.Compression.GunZip(System.Byte[])">
            <summary>
            Gunzip decompress
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Utils.JceStruct.Buffer">
            <summary>
            Jcez专有缓冲
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.JceStruct.Buffer.TakeJceHead(System.Byte,Konata.Core.Utils.JceStruct.Model.Type)">
            <summary>
            JCE头报文写入
            </summary>
            <param name="tag">Tag.</param>
            <param name="type">JCE type.</param>
        </member>
        <member name="M:Konata.Core.Utils.JceStruct.Buffer.PutJceHead(Konata.Core.Utils.JceStruct.Model.Type@)">
            <summary>
            JCE头报文读取
            </summary>
            <param name="type">JCE type.</param>
            <returns>Tag.</returns>
        </member>
        <member name="M:Konata.Core.Utils.JceStruct.Jce.Serialize(Konata.Core.Utils.JceStruct.Model.JStruct)">
            <summary>
            
            </summary>
            <param name="jce"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.JceStruct.Jce.Deserialize(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Network.Http.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Int32)">
            <summary>
            Http get
            </summary>
            <param name="url"></param>
            <param name="header"></param>
            <param name="timeout"></param>
            <param name="limitLen"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Network.Http.Post(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Http post
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="header"></param>
            <param name="param"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Network.Icmp.Ping(System.String,System.Int32)">
            <summary>
            Pinging IP
            </summary>
            <param name="hostIp"><b>[In] </b>Host IP address</param>
            <param name="timeout"><b>[Opt] </b>Pinging timeout default 1000 ms</param>
            <returns></returns>
        </member>
        <member name="T:Konata.Core.Utils.Network.NetTool">
            <summary>
            Networking tools
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.Oicq">
            <summary>
            GUID Generator
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.Oicq.GroupCode2GroupUin(System.UInt32)">
            <summary>
            Group code 2 Group Uin (用户看到的群号)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Protobuf.ProtoTreeRoot.PathTo(Konata.Core.Utils.Protobuf.ProtoTreeRoot,System.String)">
            <summary>
            Retrieve proto tree values with an expression
            </summary>
            <param name="root"></param>
            <param name="leafPath"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Protobuf.ProtoTreeRoot.Serialize(Konata.Core.Utils.Protobuf.ProtoTreeRoot)">
            <summary>
            Serialize proto tree to binary buffer
            </summary>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Protobuf.ProtoTreeRoot.Deserialize(System.Byte[],System.Boolean)">
            <summary>
            Construct proto tree from binary buffer
            </summary>
            <param name="data"></param>
            <param name="recursion"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.Reflection.Clone``1(``0)">
            <summary>
            Deep clone object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.StringGen.GetRandHex(System.Int32,System.Boolean)">
            <summary>
            Get random hex string
            </summary>
            <param name="length">Required length</param>
            <param name="cases">Character cases, true is upper</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.StringGen.GetRandNumber(System.Int32)">
            <summary>
            Get random number string
            </summary>
            <param name="length">Required length</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.StringGen.GetRandString(System.Int32,System.Boolean)">
            <summary>
            Get random string
            </summary>
            <param name="length">Required length</param>
            <param name="symbol">Including symbols</param>
            <returns></returns>
        </member>
        <member name="M:Konata.Core.Utils.StringGen.GetRandStrFromTemplate(System.String,System.Int32)">
            <summary>
            Get random string from a template
            </summary>
            <param name="template">The template string</param>
            <param name="length">Required length</param>
            <returns></returns>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.Name">
            <summary>
            Task name
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.Action">
            <summary>
            Task action
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.Interval">
            <summary>
            Task interval
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.Times">
            <summary>
            Execute how many times
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.RemainInterval">
            <summary>
            Task remain interval
            </summary>
        </member>
        <member name="P:Konata.Core.Utils.TaskScheduler.Schedule.RemainTimes">
            <summary>
            Task remain times
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.SchedulerThread">
            <summary>
            Scheduler thread
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.Cancel(System.String)">
            <summary>
            Cancel the task
            </summary>
            <param name="name"><b>[In]</b> Task identity name</param>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.Interval(System.String,System.Int32,System.Int32,System.Action)">
            <summary>
            Execute the task with a specific interval
            </summary>
            <param name="name"><b>[In]</b> Task identity name</param>
            <param name="interval"><b>[In]</b> Interval in milliseconds</param>
            <param name="times"><b>[In]</b> Execute times</param>
            <param name="action"><b>[In]</b> Callback action</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.Interval(System.String,System.Int32,System.Action)">
            <summary>
            Execute the task with a specific interval
            </summary>
            <param name="name"><b>[In]</b> Task identity name</param>
            <param name="interval"><b>[In]</b> Interval in milliseconds</param>
            <param name="action"><b>[In]</b> Callback action</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.RunOnce(System.String,System.Int32,System.Action)">
            <summary>
            Execute the task once
            </summary>
            <param name="name"><b>[In]</b> Task identity name</param>
            <param name="delay"><b>[In]</b> Delay time in milliseconds</param>
            <param name="action"><b>[In]</b> Callback action</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.RunOnce(System.String,System.DateTime,System.Action)">
            <summary>
            Execute the task once
            </summary>
            <param name="name"><b>[In]</b> Task identity name</param>
            <param name="date"><b>[In]</b> Execute date</param>
            <param name="action"><b>[In]</b> Callback action</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Konata.Core.Utils.TaskScheduler.Trigger(System.String)">
            <summary>
            Trigger a task to run
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            Encrypt data.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            Decrypt data.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.Encrypt(System.Byte[])">
            <summary>
            Encrypt data with default key.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.Decrypt(System.Byte[])">
            <summary>
            Decrypt data with default key.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.WriteUInt32(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Write uint into array (Big-endian).
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.ReadUInt32(System.Byte[],System.Int32)">
            <summary>
            Read uint from array (Big-endian).
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.RandomByte(System.Int32)">
            <summary>
            Get random byte.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.Xor8(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Xor 8 bytes between 2 arrays.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.EnCipher(System.Byte[],System.Byte[])">
            <summary>
            TEA encrypt.
            </summary>
        </member>
        <member name="M:Konata.Core.Utils.TeaEncrypt.Tea.DeCipher(System.Byte[],System.Byte[],System.Int64)">
            <summary>
            TEA decrypt.
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.TencentEncrypt.Algorithm">
            <summary>
            Tlv544 Signer, credit to OICQ and MiraiGo for the original implementation
            </summary>
        </member>
        <member name="T:Konata.Core.Utils.Tencent.QImei.QImeiProvider">
            <summary>
            Provides methods to query QQ IMEI.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskAwaiters.ForceAsync(System.Threading.Tasks.Task)">
            <summary>
            Returns an awaitable/awaiter that will ensure the continuation is executed
            asynchronously on the thread pool, even if the task is already completed
            by the time the await occurs.  Effectively, it is equivalent to awaiting
            with ConfigureAwait(false) and then queuing the continuation with Task.Run,
            but it avoids the extra hop if the continuation already executed asynchronously.
            </summary>
        </member>
    </members>
</doc>
